{"version":3,"file":"bundle.mjs","mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA,UAAU;AACV,WAAW,YAAY;AACvB,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,GAAG;AACd,WAAW,MAAM;AACjB,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;ACnDa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,eAAe;AACf,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA,8BAA8B,EAAE,mBAAmB,EAAE,iBAAiB,EAAE;AACxE;;;;;;;;;;;;AC1Ia;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;;;;;;;;;;;;AC3Ea;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrcAAc;AACd;AACA;AACA,cAAc,0CAA0C;AACxD;AACA;AACA,cAAc;AACd;AACA,qDAAqD;AACrD;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9Ua;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA,MAAM,aAAa;AACnB;AACA;;;;;;;;;;;;AChBa;AACb;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C;AACA,UAAU;AACV,WAAW,QAAQ;AACnB,aAAa,YAAY;AACzB;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA,UAAU;AACV,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,YAAY;AACzB,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/Ca;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,YAAY;AACvB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,YAAY;AACZ,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,sDAAsD,aAAa;AACnE;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA,wBAAwB;AACxB;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,mBAAmB;AAC9B,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,mBAAmB;AAC9B,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB,+CAA+C;AAChF,WAAW,UAAU;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB,+CAA+C;AAChF,WAAW,UAAU;AACrB,aAAa;AACbaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa;AACb;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,kBAAkB;AAClF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,kBAAkB;AAC7F;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,qBAAqB;AACtG;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA,iFAAiF,qBAAqB;AACtG;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,oBAAoB;AACrG;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,2BAA2B;AACrH;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA,0FAA0F,2BAA2B;AACrH;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,uBAAuB;AAC3G;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,8BAA8B;AAC3H;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA,6FAA6F,8BAA8B;AAC3H;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,mBAAmB;AAC5F;AACA,WAAW,qBAAqB;AAChC,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,kBAAkB;AACrE;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,oBAAoB;AACnG;AACA,WAAW,qBAAqB;AAChC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,oBAAoB;AAChG;AACA,WAAW,qBAAqB;AAChC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mBAAmB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,kBAAkB;AACtF;AACA,WAAW,qBAAqB;AAChC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,kBAAkB;AAClF;AACA,WAAW,qBAAqB;AAChC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,gEAAgE,kBAAkB;AAClF;AACA,WAAW,qBAAqB;AAChC,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,qBAAqB;AAClH;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6GAA6G,sBAAsB;AACnI;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wGAAwG,8BAA8B;AACtI;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,wGAAwG,8BAA8B;AACtI;AACA,WAAW,cAAc;AACzB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1yCA;;AAEa;AACb,iHAA+C;;;;;;;;;;;;ACHlC;AACb;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,wBAAwB,mBAAO,CAAC,yDAAU;AAC1C,wBAAwB,mBAAO,CAAC,uEAAiB;AACjD,wBAAwB,mBAAO,CAAC,yDAAU;AAC1C,wBAAwB,mBAAO,CAAC,uEAAiB;;AAEjD;AACA,wBAAwB,mBAAO,CAAC,qEAAgB;AAChD,wBAAwB,mBAAO,CAAC,mDAAO;AACvC,wBAAwB,mBAAO,CAAC,uDAAS;AACzC;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACnCa;AACb;;AAEA,gBAAgB,mBAAO,CAAC,qEAAgB;;AAExC,kBAAkB;;AAElB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,aAAa,qBAAqB,GAAG,oBAAoB,sCAAsC;AAC/F,YAAY,OAAO;AACnB;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA,4BAA4B;AAC5B;AACA,kEAAkE;AAClE,kEAAkE;AAClE,kEAAkE;AAClE,kEAAkE;AAClE,kEAAkE;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;;AAEA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA,KAAK;AACL;;;;;;;;;;;;AC1Za;AACb;;AAEA;AACA,aAAa,mBAAO,CAAC,yDAAU;AAC/B;;AAEA,WAAW,mBAAO,CAAC,qEAAgB;;AAEnC;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;;AAEA;;;;;;;;;;;;AClDa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,sBAAsB;AACvD;AACA,UAAU;AACV,WAAW,mCAAmC,YAAY,IAAI;AAC9D,WAAW,YAAY;AACvB,WAAW,iBAAiB;AAC5B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,mCAAmC,cAAc;AACjD;AACA,UAAU;AACV,WAAW,YAAY;AACvB,WAAW,iBAAiB;AAC5B,aAAa;AACb;;AAEA,cAAc,mBAAO,CAAC,mEAAe;;;;;;;;;;;;ACnCxB;AACb;;AAEA,WAAW,mBAAO,CAAC,sEAAiB;;AAEpC;AACA;;AAEA;AACA,yCAAyC,sCAAsC;AAC/E;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA,UAAU;AACV,WAAW,YAAY;AACvB,WAAW,MAAM;AACjB,aAAa;AACb;;AAEA;AACA,+BAA+B,mBAAmB,eAAe,qBAAqB;AACtF;AACA;AACA;AACA,UAAU;AACV,WAAW,uBAAuB;AAClC,WAAW,iCAAiC;AAC5C,aAAa,wBAAwB;AACrC;;AAEA;AACA;AACA,6CAA6C,qBAAqB;AAClE;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,mCAAmC,kCAAkC;AACrE,WAAW,qCAAqC;AAChD,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,WAAW,uBAAuB;AAClC,WAAW,iCAAiC;AAC5C,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC,mCAAmC;AACnE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7Ia;AACb;;AAEA,WAAW,mBAAO,CAAC,sEAAiB;;AAEpC;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA,6BAA6B;AAC7B,6CAA6C;AAC7C,2BAA2B;;AAE3B;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvMa;AACb;;AAEA;AACA,iBAAiB,mBAAO,CAAC,4EAAuB;;AAEhD;AACA,cAAc,mBAAO,CAAC,sEAAoB;;AAE1C;AACA,oBAAoB,mBAAO,CAAC,kFAA0B;;AAEtD;AACA,aAAa,mBAAO,CAAC,oEAAmB;;AAExC;AACA,eAAe,mBAAO,CAAC,wEAAqB;;AAE5C;AACA,YAAY,mBAAO,CAAC,kEAAkB;;AAEtC;AACA,YAAY,mBAAO,CAAC,kEAAkB;;AAEtC;AACA,gBAAgB,mBAAO,CAAC,kEAAY;;AAEpC;AACA;AACA;AACA,UAAU;AACV;AACA,6BAA6B,qBAAM;AACnC,sBAAsB,qBAAM;AAC5B,sBAAsB,qBAAM;AAC5B,sBAAsB,qBAAM;AAC5B,sBAAsB,qBAAM;;AAE5B;AACA;AACA;AACA,UAAU;AACV;AACA,6BAA6B,qBAAM;AACnC;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,qFAAqF;;AAErF;AACA;AACA,UAAU;AACV;AACA;AACA,mDAAmD,mCAAmC;;AAEtF;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA,kCAAkC,EAAE;;AAEpC;AACA;AACA,WAAW,aAAa;AACxB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,mBAAmB;AAC9B,WAAW,SAAS;AACpB,aAAa,mBAAmB;AAChC;AACA,qCAAqC;AACrC,6CAA6C,iBAAiB;AAC9D;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,oBAAoB;AACjC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,iDAAiD,kBAAkB,mBAAmB;;AAEtF;AACA;AACA;AACA;AACA,mDAAmD,gCAAgC;;AAEnF;AACA;AACA;;AAEA;;AAEA,2DAA2D,kBAAkB,gBAAgB;;AAE7F;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,mBAAmB;AAC9B;AACA;AACA,qCAAqC;AACrC,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA,kCAAkC,uBAAuB;AACzD;AACA,UAAU;AACV,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,aAAa;AAC1B;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA,wBAAwB;AACxB,gEAAgE,QAAQ;AACxE;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,uBAAuB;AACzD;AACA,UAAU;AACV,WAAW,kBAAkB;AAC7B,aAAa;AACb;;AAEA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,aAAa;AAC1B;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,sBAAsB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpaa;AACb;;AAEA,gBAAgB,mBAAO,CAAC,qEAAgB;;AAExC,kBAAkB;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA,oBAAoB;AACpB;;AAEA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,qBAAqB,GAAG,oBAAoB,yCAAyC;AAClG;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,YAAY;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,iCAAiC;AAC5C,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,QAAQ;AACrB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,QAAQ;AACrB,YAAY,WAAW;AACvB;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,QAAQ;AACrB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,QAAQ;AACrB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,aAAa,QAAQ;AACrB,YAAY,WAAW;AACvB;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;;AAEA;AACA;AACA,WAAW,mBAAmB;AAC9B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,0BAA0B,IAAI,4BAA4B;AACtE,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChda;AACb;;AAEA;AACA,aAAa,mBAAO,CAAC,yDAAU;AAC/B;;AAEA,WAAW,mBAAO,CAAC,qEAAgB;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB,QAAQ;AACzB;AACA;;AAEA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AAC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,CAAC,CAAC;AAC9D,yFAAyF;AAC3E,aAAW,GAAG,4EAAoB,CAAC,mEAAW,CAAC,CAAC;;;;;;;;;;;;AC/BlE;AACa;AACb;AACA,gBAAgB,mBAAO,CAAC,gEAAoB;AAC5C;AACA;AACA;AACA;AACA,WAAW,mBAAO,CAAC,6CAAM;AACzB;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC,sBAAsB,aAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA,gEAAgE,iBAAiB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,uCAAuC;AAChH;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,mBAAmB,kBAAkB;AACrC,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,uCAAuC;AAClI;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,mBAAmB,kBAAkB;AACrC,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,mBAAmB,QAAQ;AAC3B,qBAAqB,mBAAmB;AACxC,oBAAoB,OAAO;AAC3B,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,qBAAqB,mBAAmB;AACxC,oBAAoB,OAAO;AAC3B,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,mBAAmB,8BAA8B;AACjD,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC,sBAAsB,aAAa;AACnC,sBAAsB,aAAa;AACnC,sBAAsB,kBAAkB;AACxC,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA,gEAAgE,iBAAiB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,uCAAuC;AAChH;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,mBAAmB,kBAAkB;AACrC,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,uCAAuC;AAClI;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,mBAAmB,kBAAkB;AACrC,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,mBAAmB,QAAQ;AAC3B,qBAAqB,mBAAmB;AACxC,oBAAoB,OAAO;AAC3B,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,qBAAqB,mBAAmB;AACxC,oBAAoB,OAAO;AAC3B,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,mBAAmB,8BAA8B;AACjD,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kBAAkB;AACxC,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA,gEAAgE,iBAAiB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,2CAA2C;AACxH;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C,mBAAmB,kBAAkB;AACrC,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,2CAA2C;AAC1I;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C,mBAAmB,kBAAkB;AACrC,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,mBAAmB,QAAQ;AAC3B,qBAAqB,uBAAuB;AAC5C,oBAAoB,OAAO;AAC3B,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,qBAAqB,uBAAuB;AAC5C,oBAAoB,OAAO;AAC3B,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C,mBAAmB,8BAA8B;AACjD,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC,sBAAsB,aAAa;AACnC,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA,gEAAgE,iBAAiB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,2CAA2C;AACxH;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C,mBAAmB,kBAAkB;AACrC,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,2CAA2C;AAC1I;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C,mBAAmB,kBAAkB;AACrC,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,mBAAmB,QAAQ;AAC3B,qBAAqB,uBAAuB;AAC5C,oBAAoB,OAAO;AAC3B,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,qBAAqB,uBAAuB;AAC5C,oBAAoB,OAAO;AAC3B,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C,mBAAmB,8BAA8B;AACjD,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC,sBAAsB,aAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA,gEAAgE,iBAAiB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,uCAAuC;AAChH;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,mBAAmB,kBAAkB;AACrC,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,uCAAuC;AAClI;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,mBAAmB,kBAAkB;AACrC,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,mBAAmB,QAAQ;AAC3B,qBAAqB,mBAAmB;AACxC,oBAAoB,OAAO;AAC3B,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,qBAAqB,mBAAmB;AACxC,oBAAoB,OAAO;AAC3B,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,mBAAmB,8BAA8B;AACjD,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC,sBAAsB,aAAa;AACnC,sBAAsB,aAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA,gEAAgE,iBAAiB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,uCAAuC;AAChH;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,mBAAmB,kBAAkB;AACrC,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,uCAAuC;AAClI;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,mBAAmB,kBAAkB;AACrC,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,mBAAmB,QAAQ;AAC3B,qBAAqB,mBAAmB;AACxC,oBAAoB,OAAO;AAC3B,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,6BAA6B;AAChD,qBAAqB,mBAAmB;AACxC,oBAAoB,OAAO;AAC3B,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC,mBAAmB,8BAA8B;AACjD,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;;;;;;;;;;;;AC57CA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACN4D;AAChB;AACO;AACG;AACd;AAGxC,MAAM,QAAQ;IAEV;QACI,0EAAsC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACxE,kEAA8B,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;QACxD,+DAA2B,GAAG,CAAC,KAAY,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACvE,CAAC;IAEM,KAAK,CAAC,KAAK;QACd,yDAAqB,CAAC,oBAAoB,CAAC;QAC3C,gBAAgB;QAChB,OAAO,CAAC,GAAG,CAAC,iEAAoB,CAAC;QACjC,MAAM,gFAAgC,CAAC,iEAAoB,CAAC,CAAC;QAC7D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACjB,cAAc;QACd,qBAAqB;QAErB,QAAQ;QACR,MAAM,wEAAwB,CAAC,yEAAkB,CAAC,CAAC;QAEnD,cAAc;QACd,sEAAkC,EAAE,CAAC;IACzC,CAAC;IAAA,CAAC;IAEK,iBAAiB;QACpB,wEAAwB,CAAC,IAAI,CAAC,CAAC;QAC/B,gEAAU,CAAC,kCAAkC,CAAC,CAAC;IACnD,CAAC;IAEO,MAAM,CAAC,KAAY;QACvB,qBAAqB;QACrB,kEAAkB,CAAC,KAAK,CAAC;IAC7B,CAAC;IAEM,SAAS;QACZ,gEAAU,CAAC,0BAA0B,CAAC,CAAC;IAC3C,CAAC;CACJ;AAID,IAAI,QAAQ,EAAE,CAAC,KAAK,EAAE,CAAC","sources":["webpack://tsproject/./node_modules/@protobufjs/aspromise/index.js","webpack://tsproject/./node_modules/@protobufjs/base64/index.js","webpack://tsproject/./node_modules/@protobufjs/eventemitter/index.js","webpack://tsproject/./node_modules/@protobufjs/float/index.js","webpack://tsproject/./node_modules/@protobufjs/inquire/index.js","webpack://tsproject/./node_modules/@protobufjs/pool/index.js","webpack://tsproject/./node_modules/@protobufjs/utf8/index.js","webpack://tsproject/./node_modules/long/src/long.js","webpack://tsproject/./node_modules/protobufjs/minimal.js","webpack://tsproject/./node_modules/protobufjs/src/index-minimal.js","webpack://tsproject/./node_modules/protobufjs/src/reader.js","webpack://tsproject/./node_modules/protobufjs/src/reader_buffer.js","webpack://tsproject/./node_modules/protobufjs/src/roots.js","webpack://tsproject/./node_modules/protobufjs/src/rpc.js","webpack://tsproject/./node_modules/protobufjs/src/rpc/service.js","webpack://tsproject/./node_modules/protobufjs/src/util/longbits.js","webpack://tsproject/./node_modules/protobufjs/src/util/minimal.js","webpack://tsproject/./node_modules/protobufjs/src/writer.js","webpack://tsproject/./node_modules/protobufjs/src/writer_buffer.js","webpack://tsproject/./src/data/pb/Opcode.ts","webpack://tsproject/./src/data/ui/FlyBird.ts","webpack://tsproject/./src/data/ui/GameStart.ts","webpack://tsproject/./src/data/ui/common.ts","webpack://tsproject/./src/framework/common/GameObjectPool.ts","webpack://tsproject/./src/framework/common/List.ts","webpack://tsproject/./src/framework/common/Messenger.ts","webpack://tsproject/./src/framework/common/NiceDecorator.ts","webpack://tsproject/./src/framework/common/ResManager.ts","webpack://tsproject/./src/framework/common/Singleton.ts","webpack://tsproject/./src/framework/logger/Logger.ts","webpack://tsproject/./src/framework/net/GameSession.ts","webpack://tsproject/./src/framework/net/HttpManager.ts","webpack://tsproject/./src/framework/net/MessageParser.ts","webpack://tsproject/./src/framework/net/NetErrorCode.ts","webpack://tsproject/./src/framework/net/SessionManager.ts","webpack://tsproject/./src/framework/scene/BaseScene.ts","webpack://tsproject/./src/framework/scene/SceneDef.ts","webpack://tsproject/./src/framework/scene/SceneFactory.ts","webpack://tsproject/./src/framework/scene/SceneManager.ts","webpack://tsproject/./src/framework/ui/UIBase.ts","webpack://tsproject/./src/framework/ui/UIDefine.ts","webpack://tsproject/./src/framework/ui/UIFactory.ts","webpack://tsproject/./src/framework/ui/UILib/UILoading.ts","webpack://tsproject/./src/framework/ui/UIManager.ts","webpack://tsproject/./src/framework/ui/UIPage.ts","webpack://tsproject/./src/framework/ui/UIPanel.ts","webpack://tsproject/./src/game/event/UIMessage.ts","webpack://tsproject/./src/game/event/UIMessageManager.ts","webpack://tsproject/./src/game/module/flybird/scene/FlyBirdScene.ts","webpack://tsproject/./src/game/module/flybird/ui/UIFlyBirdMainView.ts","webpack://tsproject/./src/game/module/gamestart/scene/GameStartScene.ts","webpack://tsproject/./src/game/module/gamestart/ui/UIStartView.ts","webpack://tsproject/./src/game/module/gamestart/vo/VoGameStart.ts","webpack://tsproject/./src/game/module/home/scene/HomeScene.ts","webpack://tsproject/./src/game/module/home/vo/VoHome.ts","webpack://tsproject/./src/game/module/pve/scene/PveScene.ts","webpack://tsproject/./src/global/GameConfig.ts","webpack://tsproject/./src/data/pb/gen/pb.js","webpack://tsproject/external commonjs2 \"csharp\"","webpack://tsproject/external commonjs2 \"puerts\"","webpack://tsproject/webpack/bootstrap","webpack://tsproject/webpack/runtime/compat get default export","webpack://tsproject/webpack/runtime/define property getters","webpack://tsproject/webpack/runtime/global","webpack://tsproject/webpack/runtime/hasOwnProperty shorthand","webpack://tsproject/webpack/runtime/make namespace object","webpack://tsproject/./src/GameMain.ts"],"sourcesContent":["\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","import { nice_ts } from \"./gen/pb\";\r\nexport class DecodeMsg{\r\n\tpublic rpcId:number;\r\n\tpublic msgObj:any;\r\n}\r\nexport class Opcode{\r\n\tpublic static MSG_C2R_Login:number = 1000;\r\n\tpublic static MSG_R2C_Login:number = 1001;\r\n\tpublic static MSG_C2G_LoginGate:number = 1002;\r\n\tpublic static MSG_G2C_LoginGate:number = 1003;\r\n\r\n\tpublic static MSG_C2GS_Test:number = 2001;\r\n\tpublic static MSG_GS2C_Test:number = 2002;\r\n\r\n\tpublic static map = {\r\n\t\t1000 : {\"decode\":nice_ts.C2R_Login.decode,\"encode\":nice_ts.C2R_Login.encode},\r\n\t\t1001 : {\"decode\":nice_ts.R2C_Login.decode,\"encode\":nice_ts.R2C_Login.encode},\r\n\t\t1002 : {\"decode\":nice_ts.C2G_LoginGate.decode,\"encode\":nice_ts.C2G_LoginGate.encode},\r\n\t\t1003 : {\"decode\":nice_ts.G2C_LoginGate.decode,\"encode\":nice_ts.G2C_LoginGate.encode},\r\n\r\n\t\t2001 : {\"decode\":nice_ts.C2GS_Test.decode,\"encode\":nice_ts.C2GS_Test.encode},\r\n\t\t2002 : {\"decode\":nice_ts.GS2C_Test.decode,\"encode\":nice_ts.GS2C_Test.encode}\r\n\t}\r\n\tpublic static decode(opcode:number, msg:Uint8Array):DecodeMsg {\r\n\t\tlet msgObj = this.map[opcode][\"decode\"](msg);\r\n\t\tlet decodeMsg = new DecodeMsg();\r\n\t\tdecodeMsg.rpcId = msgObj.RpcId;\r\n\t\tdecodeMsg.msgObj = msgObj;\r\n\t\treturn decodeMsg;\r\n\t}\r\n\tpublic static encode(opcode:number, msg:Uint8Array){\r\n\t\tlet buf = this.map[opcode][\"encode\"](msg).finish();\r\n\t\treturn buf\r\n\t}\r\n\r\n\r\n\r\n}\r\n","/** This is an automatically generated class by FairyGUI. Please do not modify it. **/\n\nexport class FlyBirdUI\n{\n    public static PackageName:string = \"FlyBird\";\n    public static PackageBytes:string = \"FlyBird_fui.bytes\";\n    public static UIMainVIew:string = \"MainVIew\";\n}","/** This is an automatically generated class by FairyGUI. Please do not modify it. **/\n\nexport class GameStartUI\n{\n    public static PackageName:string = \"GameStart\";\n    public static PackageBytes:string = \"GameStart_fui.bytes\";\n    public static UIStartView:string = \"StartView\";\n}","/** This is an automatically generated class by FairyGUI. Please do not modify it. **/\n\nexport class CommonUI\n{\n    public static PackageName:string = \"Common\";\n    public static PackageBytes:string = \"Common_fui.bytes\";\n    public static UILoadingView:string = \"LoadingView\";\n}","\r\nimport { Singleton } from './Singleton';\r\nimport { ResManager } from './ResManager';\r\nimport { UnityEngine } from 'csharp';\r\n\r\n\r\n\r\n// -- GameObject缓存池\r\n// -- 注意：\r\n// -- 1、所有需要预设都从这里加载，不要直接到ResourcesManager去加载，由这里统一做缓存管理\r\n// -- 2、缓存分为两部分：从资源层加载的原始GameObject(Asset)，从GameObject实例化出来的多个Inst\r\nexport class GameObjectPool extends Singleton<GameObjectPool>{\r\n\r\n    private __cacheTransRoot = null;\r\n    private __goPool = new Map();\r\n    private __instCache:Map<string,Array<any>> = new Map<string,Array<any>>();\r\n\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        let go = UnityEngine.GameObject.Find(\"GameObjectCacheRoot\");\r\n\r\n        if(go == undefined){\r\n            go = new UnityEngine.GameObject(\"GameObjectCacheRoot\");\r\n            UnityEngine.Object.DontDestroyOnLoad(go);\r\n        }\r\n\r\n        this.__cacheTransRoot = go.transform;\r\n    }\r\n\r\n    //-- 检测是否已经被缓存\r\n    public checkHasCached(path:string){\r\n\r\n        let cachedInst:Array<any> = this.__instCache.get(path);\r\n        if(cachedInst != undefined && cachedInst.length > 0){\r\n            return true;\r\n        }\r\n\r\n        let pooledGo = this.__goPool.get(path);\r\n        return pooledGo != undefined;\r\n    }\r\n\r\n\r\n    //-- 缓存并实例化GameObject\r\n    public cacheAndInstGameObject(path:string, go:any, inst_count:number = 1){\r\n\r\n        this.__goPool.set(path, go);\r\n        if(inst_count > 0){\r\n\r\n            let cachedInst:Array<any> = this.__instCache.get(path);\r\n            for(let i:number =0; i < inst_count; i++){\r\n\r\n                let inst = UnityEngine.GameObject.Instantiate(go) as UnityEngine.GameObject;\r\n                inst.transform.SetParent(this.__cacheTransRoot);\r\n                inst.SetActive(false);\r\n\r\n                cachedInst.push(inst);\r\n            }\r\n        }\r\n    }\r\n\r\n    //-- 尝试从缓存中获取\r\n    public tryGetFromCache(path:string):any{\r\n\r\n        if(!this.checkHasCached(path)) {\r\n            return null;\r\n        }\r\n\r\n        let cachedInst:Array<object>  = this.__instCache.get(path);\r\n        if(cachedInst != undefined && cachedInst.length>0){\r\n            \r\n            let inst = cachedInst.pop();\r\n            return inst;\r\n        }\r\n\r\n        let pooledGo = this.__goPool.get(path);\r\n        if(pooledGo != undefined){\r\n            let inst = UnityEngine.GameObject.Instantiate(pooledGo);\r\n            return inst;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    //预加载：可提供初始实例化个数\r\n    public async preLoadGameObjectAsync(path:string, inst_count:number, callback:Function,...params){\r\n\r\n        if(this.checkHasCached(path)){\r\n            if(callback!=null){\r\n                callback(params);\r\n            }\r\n            return;\r\n        }\r\n\r\n        let go = await ResManager.Instance(ResManager).loadPrefab(path);\r\n        if(go!=undefined){\r\n            this.cacheAndInstGameObject(path, go,inst_count);\r\n        }\r\n\r\n        if(callback!=null){\r\n            callback(params);\r\n        }\r\n    }\r\n\r\n\r\n    //-- 异步获取：必要时加载\r\n    public async getGameObjectAsync(path:string, callback:Function,...params){\r\n\r\n        let inst:any = this.tryGetFromCache(path);\r\n        if(inst ==null){\r\n            await this.preLoadGameObjectAsync(path, 1, callback, params);\r\n        }\r\n\r\n        inst = this.tryGetFromCache(path);\r\n        inst.SetActive(true);\r\n\r\n        \r\n    }\r\n\r\n\r\n    //-- 回收\r\n    public recycleGameObject(path:string, inst:any){\r\n\r\n        inst.transform.SetParent(this.__cacheTransRoot);\r\n        inst.SetActive(false);\r\n\r\n        let cachedInst = this.__instCache.get(path) || new Array();\r\n        cachedInst.push(inst);\r\n\r\n        this.__instCache.set(path, cachedInst);\r\n\r\n    }\r\n\r\n\r\n    //-- 清理缓存\r\n    public cleanup(includePooledGo:boolean = false){\r\n\r\n        this.__instCache.forEach((values, key)=>{\r\n\r\n            for(let inst of values){\r\n                if(inst != null){\r\n                    UnityEngine.GameObject.Destroy(inst);\r\n                }\r\n            }\r\n        });\r\n        this.__instCache.clear(); \r\n\r\n        if(includePooledGo){\r\n            this.__goPool.forEach((go, key)=>{\r\n\r\n                if(go != null){\r\n                    ResManager.Instance(ResManager).releaseAddressGO(go);\r\n                }\r\n            });\r\n\r\n            this.__goPool.clear();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","\r\nexport  class List<T> extends Array<T> {\r\n\tpublic constructor() {\r\n\t\tsuper();\r\n\t}\r\n \r\n\tadd:Function = function(value:T):void{\r\n\t\tthis.push(value);\r\n\t}\r\n \r\n\tinsert:Function = function(index:number, value:T):void{\r\n\t\tthis.splice(index, 0, value);\r\n\t}\r\n \r\n\tremove:Function = function(value:T):void{\r\n\t\tvar index:number = this.indexOf(value);\r\n\t\tthis.removeAt(index);\r\n\t}\r\n \r\n\tremoveAt:Function = function(index:number):void{\r\n\t\tthis.splice(index, 1);\r\n\t}\r\n \r\n\tcontains:Function = function(value:T):boolean{\r\n\t\treturn this.indexOf(value)>=0;\r\n\t}\r\n \r\n\tpublic get count():number{\r\n\t\treturn this.length;\r\n\t}\r\n \r\n\tclear:Function = function():void{\r\n\t\tthis.splice(0);\r\n\t}\r\n \r\n\tforeach:Function = function(callback:Function):void {\r\n        this._breaking = false;\r\n        var sum = this.length;\r\n        for(var i=0;i<sum;i++){\r\n            if(this._breaking){\r\n                break;\r\n            }\r\n            callback(this[i]);\r\n        }\r\n    }\r\n \r\n    _breaking:boolean = false;\r\n    break:Function = function():void {\r\n        this._breaking = true;\r\n    }\r\n \r\n\ttoArray:Function = function():T[]{\r\n\t\tvar array:T[] = [];\r\n\t\tthis.forEach(element => {\r\n\t\t\tarray.push(element);\r\n\t\t});\r\n\t\treturn array;\r\n\t}\r\n \r\n\tappend:Function = function(value:T[]):void{\r\n\t\tvalue.forEach(element => {\r\n\t\t\tthis.push(element);\r\n\t\t});\r\n\t}\r\n}\r\n","\r\n\r\nexport class MesObj{\r\n    public listeners:Array<Function>;\r\n    public obj:any;\r\n}\r\n\r\n\r\nexport class Messenger{\r\n\r\n    private listenerMap = new Map<number,MesObj>();\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    public addListener(e_type:number, e_obj:any, e_listner:Function):void{\r\n\r\n        let msgObj = this.listenerMap.get(e_type);\r\n\r\n        if(typeof(msgObj) == \"undefined\"){\r\n            msgObj = new MesObj();\r\n            msgObj.obj = e_obj;\r\n            msgObj.listeners = new Array<Function>();\r\n        }\r\n        msgObj.listeners.push(e_listner);\r\n\r\n        this.listenerMap.set(e_type, msgObj);\r\n    }\r\n\r\n    public getListener(e_type:number):MesObj{\r\n        return this.listenerMap.get(e_type);\r\n    }\r\n\r\n    public broadcast(e_type:number, ...params:any[]) : void {\r\n\r\n        let msgObj = this.listenerMap.get(e_type);\r\n        \r\n        if(typeof(msgObj) != \"undefined\"){\r\n            for(let l of msgObj.listeners){\r\n               l.apply(msgObj.obj, params);\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public removeListenerByType(e_type:number) :void {\r\n\r\n        this.listenerMap.delete(e_type);\r\n    }\r\n\r\n\r\n    public removeListener(e_type:number, e_listener:Function ):void{\r\n\r\n        let msgObj = this.listenerMap.get(e_type);\r\n\r\n        if(typeof(msgObj) != \"undefined\"){\r\n            \r\n            for(let i:number =0; i< msgObj.listeners.length; i++){\r\n                if(msgObj.listeners[i] == e_listener){\r\n                    msgObj.listeners.splice(i,1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public clearup():void{\r\n\r\n        this.listenerMap.clear();\r\n    }\r\n\r\n}","\r\n\r\n\r\n// FairyGUI 元件 绑定器\r\nexport function binder(name:string){\r\n    return function(target:any, key:string | symbol){\r\n        target[\"binders\"] = target[\"binders\"] || {};\r\n        target[\"binders\"][key] = name;\r\n    }\r\n}","\r\nimport { Singleton } from './Singleton';\r\nimport { $promise } from 'puerts';\r\nimport {NiceTS, UnityEngine} from 'csharp';\r\nimport { Logger } from '../logger/Logger';\r\n\r\nexport class ResManager extends Singleton<ResManager>{\r\n\r\n    private _pkgMap:Map<string,number> = new Map<string,number>();\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    async loadFairyGUIPackage(packageName:string){\r\n        try{\r\n            let count = this._pkgMap.get(packageName);\r\n            if(count == null || count < 1){\r\n                //没有缓存，加载\r\n                let address = packageName+\"_fui.bytes\";\r\n                console.log(address)\r\n                let task = NiceTS.ResourceManager.LoadFairyGUIPackage(address,packageName);\r\n                await $promise(task);\r\n                this._pkgMap.set(packageName, 1);\r\n            }\r\n            else{\r\n                this._pkgMap.set(packageName, count+1);\r\n            }\r\n        }catch(ex){\r\n            Logger.error(`Load fairyGUI :${packageName} : ${ex}`)\r\n        }\r\n    }\r\n    \r\n    public releaseFairyGUIPackage(packageName){\r\n\r\n        let count = this._pkgMap.get(packageName);\r\n        if(count!=null && count>1){\r\n            this._pkgMap.set(packageName, count-1);\r\n        }else{\r\n\r\n            Logger.log(`release fagui package:${packageName}`);\r\n            this._pkgMap.delete(packageName);\r\n            NiceTS.ResourceManager.ReleaseFGUIPackage(packageName);\r\n        }\r\n    }\r\n\r\n    async loadScene(sceneName:string, mode = UnityEngine.SceneManagement.LoadSceneMode.Single){\r\n        try{\r\n          \r\n            let task = NiceTS.ResourceManager.LoadScene(sceneName, mode,(progress:Number)=>{\r\n                Logger.log(\"load scene: \"+progress)\r\n            });\r\n\r\n            let scenInstance = await $promise(task)\r\n            return scenInstance\r\n\r\n        }catch(ex){\r\n\r\n            Logger.error(`Load Scene :${sceneName} : ${ex}`)\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    async unloadScene(sceneInstance:UnityEngine.ResourceManagement.ResourceProviders.SceneInstance){\r\n        try{\r\n            let task= NiceTS.ResourceManager.UnloadScene(sceneInstance)\r\n            let go = await $promise(task);\r\n            return go;\r\n        }catch(ex){\r\n\r\n            Logger.error(`Unload scene  : ${ex}`)\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public unloadSceneByName(sceneName:string){\r\n\r\n        NiceTS.ResourceManager.UnloadSceneByName(sceneName);\r\n    }\r\n\r\n    async loadPrefab(address:string){\r\n\r\n        try{\r\n            let task= NiceTS.ResourceManager.LoadPrefab(address);\r\n            let go = await $promise(task);\r\n            return go;\r\n        }catch(ex){\r\n\r\n            Logger.error(`Load prefab :${address} : ${ex}`)\r\n\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    async loadTextAsset(address:string){\r\n\r\n        try{\r\n            let task = NiceTS.ResourceManager.LoadTextAsset(address);\r\n            let go = await $promise(task);\r\n            return go;\r\n        }catch(ex){\r\n            Logger.error(`Load textasset :${address} : ${ex}`)\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    async loadTextBytes(address:string){\r\n\r\n        try{\r\n            let task = NiceTS.ResourceManager.LoadTextBytes(address);\r\n            let bytes = await $promise(task);\r\n            return bytes;\r\n        }catch(ex){\r\n            Logger.error(`LoadTextBytes :${address} : ${ex}`)\r\n        }\r\n    }\r\n\r\n    async loadSprite(address:string){\r\n\r\n        try{\r\n            let task = NiceTS.ResourceManager.LoadSprite(address);\r\n            let go = await $promise(task);\r\n            return go;\r\n\r\n        }catch(ex){\r\n            Logger.error(`Load sprite :${address} : ${ex}`)\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    public releaseAddressGO(go:any){\r\n\r\n        NiceTS.ResourceManager.ReleaseAddressGO(go);\r\n    }\r\n\r\n\r\n    \r\n}","\r\n\r\nexport class Singleton<T>{\r\n\r\n    private static instance:any = null;\r\n\r\n    public static Instance<T>( c: { new(): T } ) : T{\r\n\r\n        if(this.instance == null){\r\n            this.instance = new c();\r\n        }\r\n\r\n        return this.instance;\r\n    }\r\n\r\n}","import { UnityEngine } from 'csharp';\r\nimport { GameConfig } from '../../global/GameConfig';\r\nenum LogType {\r\n\tError = 0,\r\n\tAssert = 1,\r\n\tWarning = 2,\r\n\tLog = 3,\r\n\tException = 4\r\n}\r\n\r\nexport class Logger{\r\n    private  static  unity_log_target = null;\r\n\r\n    static getPrintStack(type: LogType, showStack : boolean, ...args) {\r\n        let message = '';\r\n        for (let i = 0; i < args.length; i++) {\r\n            const element = args[i];\r\n            if (typeof element === 'object' && Logger.LOG_OBJECT_TO_JSON) {\r\n                message += JSON.stringify(element);\r\n            } else {\r\n                message += element;\r\n            }\r\n            if (i < args.length - 1) {\r\n                message += ' ';\r\n            }\r\n        }\r\n    \r\n        if (showStack || UnityEngine.Application.isEditor) {\r\n            var stacks = new Error().stack.split('\\n');\r\n            for (let i = 3; i < stacks.length; i++) {\r\n                const line = stacks[i];\r\n                message += '\\n';\r\n                message += line;\r\n            }\r\n        }\r\n    \r\n        if (!Logger.unity_log_target) {\r\n            Logger.unity_log_target = new UnityEngine.Object();\r\n        }\r\n\r\n        return message;\r\n    }\r\n\r\n    \r\n\r\n\tstatic log(...args): void{\r\n        if(!GameConfig.debug) return;\r\n\r\n        let msg = Logger.getPrintStack(LogType.Log, true, args);\r\n        console.log(msg);\r\n    }\r\n\r\n\t/**\r\n\t * Outputs a warning message to the Logger.\r\n\t * @param message  list of JavaScript objects to output. The string representations of each of these objects are appended together in the order listed and output.\r\n\t */\r\n\tstatic warn(...args): void{\r\n        if(!GameConfig.debug) return;\r\n\r\n        let msg = Logger.getPrintStack(LogType.Warning, true, args);\r\n        console.warn(msg);\r\n    }\r\n\r\n\t/**\r\n\t * Outputs an error message to the Logger.\r\n\t * @param message A list of JavaScript objects to output. The string representations of each of these objects are appended together in the order listed and output.\r\n\t */\r\n\tstatic error(...args): void{\r\n        if(!GameConfig.debug) return;\r\n\r\n        let msg = Logger.getPrintStack(LogType.Error, true, args);\r\n        console.error(msg);\r\n    }\r\n\r\n\t/** Outputs a stack trace to the Logger.\r\n\t * @param message A list of JavaScript objects to output. The string representations of each of these objects are appended together in the order listed and output.\r\n\t*/\r\n\tstatic trace(...args): void{\r\n        if(!GameConfig.debug) return;\r\n        \r\n        let msg = Logger.getPrintStack(LogType.Log, true, args);\r\n        console.log(msg);\r\n    }\r\n\r\n\t/** Log JavaScript Objects as JSON format */\r\n\tstatic LOG_OBJECT_TO_JSON(...args): boolean{\r\n\r\n        return false;\r\n    }\r\n\r\n}","import { Singleton } from \"../common/Singleton\";\r\nimport { Opcode } from \"../../data/pb/Opcode\";\r\nimport { NetErrorCode } from \"./NetErrorCode\";\r\nimport { NiceTS } from \"csharp\";\r\nimport { MessageParser } from \"./MessageParser\";\r\nimport { Logger } from \"../logger/Logger\";\r\n\r\n\r\nexport class MsgPack{\r\n    public sendTime:number;\r\n    public callback:Function;\r\n    public retryTimes:number = 0;\r\n    public bytes:Uint8Array;\r\n}\r\n\r\nexport class GameSession extends Singleton<GameSession>{\r\n\r\n    public id:number = 0;  //session ID\r\n    private reSendInterval:number = 10000; //10秒重发一次\r\n    private timeoutInterval:number = 5000; //5秒检查一次是否超时\r\n    private maxReSendTimes:number = 5; //最大重发次数\r\n    private timeoutIimer:any;\r\n\r\n    private _rpcId:number = 1;\r\n    private channel:any;\r\n    private requestCallback:Map<number,MsgPack> = new Map<number,MsgPack>();\r\n    private listeners:Map<number,Function> = new Map<number,Function>();\r\n\r\n    //返回的服务器ID, 类型\r\n    private _serverId:number = -1;\r\n    private _serverType:number = 1;\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    public get rpcId():number{\r\n        return ++this._rpcId;\r\n    }\r\n\r\n    //address-> ip:port\r\n    public connectChannel(address:string, connCaback:any){\r\n\r\n        this.channel = NiceTS.TService.Instance.GetChannel();\r\n        \r\n        this.channel.errorCallback = (channel:any, code:number)=>{\r\n            if(code == NetErrorCode.ERR_SocketConnSucc){\r\n                this.timeoutIimer = setInterval(()=>{\r\n                    this.checkTimeoutMsg();\r\n                }, this.timeoutInterval);\r\n            }\r\n\r\n            connCaback(channel, code);\r\n        };\r\n        \r\n        this.channel.readCallback = (buffer:Uint8Array)=>{\r\n            this.onReceive(buffer);\r\n        };\r\n\r\n        this.channel.Connect(address);\r\n\r\n        return this;\r\n    }\r\n\r\n    //接收服务器通知\r\n    public listen(opcode:number,callback:Function){\r\n        this.listeners.set(opcode, callback);\r\n    }\r\n\r\n    //发送protoubf消息\r\n    //消息： rpc_id[4] - opcode[2] - server_id[2] - server_type[1] - \r\n    public send(opcode:number,rpcid:number, message:Uint8Array, callBack:Function){\r\n        \r\n        //封装消息：\r\n        let rpcBuf:Uint8Array = MessageParser.encodeInt(rpcid); //4\r\n        let opcodeBuf:Uint8Array = MessageParser.encodeShort(opcode); //2\r\n        let serveridBuf:Uint8Array = MessageParser.encodeShort(this._serverId); //2\r\n        let servertypeBuf:Uint8Array = MessageParser.encodeByte(this._serverType); //1\r\n\r\n\r\n        let sendArray:Uint8Array = new Uint8Array(4 + 2 + 2 + 1 +message.length);\r\n        sendArray.set(rpcBuf);\r\n        sendArray.set(opcodeBuf,    4);\r\n        sendArray.set(serveridBuf,  4 + 2);\r\n        sendArray.set(servertypeBuf, 4 + 2 + 2);\r\n        sendArray.set(message,       4 + 2 + 2 + 1);\r\n        \r\n        if(callBack != null){\r\n            let msgPack:MsgPack = new MsgPack();\r\n            msgPack.sendTime = new Date().getTime();\r\n            msgPack.callback = callBack;\r\n            msgPack.bytes = sendArray;\r\n\r\n            this.requestCallback.set(rpcid, msgPack);\r\n        }\r\n        // for(let i in sendArray){\r\n        //     Logger.log(\"TS -- send array: \"+i);\r\n        // }\r\n        //Logger.log(\"send array: \"+sendArray);\r\n        this.channel.Send(sendArray);\r\n    }\r\n\r\n    private reSend(bytes:Uint8Array){\r\n        this.channel.Send(bytes);\r\n    }\r\n\r\n    public onReceive(buffer:Uint8Array){\r\n        \r\n        let msgBuf = new Uint8Array(buffer);\r\n\r\n        let rpcid = MessageParser.decodeInt(msgBuf.subarray(0,4));\r\n        let opcode = MessageParser.decodeShort(msgBuf.subarray(4,6));\r\n        let serverid = MessageParser.decodeShort(msgBuf.subarray(6,8));\r\n        let servertype = MessageParser.decodeByte(msgBuf.subarray(8,9));\r\n\r\n        this._serverId = serverid;\r\n        this._serverType = servertype;\r\n\r\n        let msgBytes:Uint8Array = msgBuf.subarray(9);\r\n\r\n        try{\r\n            let decodeMsg =  Opcode.decode(opcode, msgBytes);\r\n\r\n\r\n            if(rpcid==undefined || !this.requestCallback.has(rpcid)){\r\n                //检查是否是服务器下发的消息\r\n                if(this.listeners.has(opcode)){\r\n                    let listen = this.listeners.get(opcode);\r\n                    listen(decodeMsg.msgObj);\r\n                }\r\n    \r\n            }else{\r\n                let msgPack:MsgPack = this.requestCallback.get(rpcid);\r\n                msgPack.callback(decodeMsg.msgObj);  \r\n    \r\n                this.requestCallback.delete(rpcid);\r\n    \r\n            }\r\n        }catch(e){\r\n            Logger.error(\"parse msg error, opcode:\"+opcode)\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    private checkTimeoutMsg(){\r\n\r\n        let currTime = new Date().getTime();\r\n\r\n        this.requestCallback.forEach((value, key) =>{\r\n\r\n            if(value.retryTimes >= this.maxReSendTimes) {\r\n                //超过最大重发次数，丢弃\r\n                Logger.log(`Message resend too more, opcode:${key}, lastsend:${value.sendTime}`);\r\n                this.requestCallback.delete(key); \r\n            }else{\r\n\r\n                if((currTime - value.sendTime) >= this.reSendInterval){\r\n                    value.retryTimes++;\r\n                    value.sendTime = currTime;\r\n                    //重发消息\r\n                    this.reSend(value.bytes);\r\n                    Logger.log(`resend message:, opcode:${key}, retry times:${value.retryTimes}`);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public disconnect():void{\r\n\r\n        clearInterval(this.timeoutIimer);\r\n\r\n        this.channel.Dispose();\r\n    }\r\n}","import { NiceTS } from \"csharp\";\r\nimport { $promise } from \"puerts\";\r\nimport { Logger } from \"../logger/Logger\";\r\nimport { Singleton } from \"../common/Singleton\";\r\n\r\nexport class HttpManager extends Singleton<HttpManager>{\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    \r\n    async get(url:string){\r\n\r\n        try{\r\n            let task= NiceTS.HttpManager.Get(url)\r\n            let txt = await $promise(task);\r\n            return txt;\r\n        }catch(ex){\r\n\r\n            Logger.error(`Get error :${url} : ${ex}`)\r\n\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    async post(url:string, form:string){\r\n\r\n        try{\r\n            let task= NiceTS.HttpManager.Post(url, form)\r\n            let txt = await $promise(task);\r\n            return txt;\r\n\r\n        }catch(ex){\r\n\r\n            Logger.error(`Post error :${url} : ${ex}`)\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n}\r\n","\r\nexport class MessageParser{\r\n\r\n\r\n    public static encodeInt(n:number):Uint8Array{\r\n\r\n        let buffer:Uint8Array = new Uint8Array(4);\r\n        buffer[0] = n >>> 24;\r\n        buffer[1] = n >>> 16;\r\n        buffer[2] = n >>> 8;\r\n        buffer[3] = n & 0xff;\r\n\r\n        return buffer\r\n    }\r\n\r\n    public static decodeInt(buffer:Uint8Array):number{\r\n        \r\n        let n = buffer[0] << 24 | buffer[1] << 16 | buffer[2] << 8 | buffer[3];\r\n\r\n        return n;\r\n    }\r\n\r\n\r\n    public static encodeShort(n:number):Uint8Array{\r\n\r\n        let buffer : Uint8Array = new Uint8Array(2);\r\n        buffer[0] = n >>> 8;\r\n        buffer[1] = n & 0xff;\r\n\r\n        return buffer;\r\n    }\r\n\r\n\r\n    public static decodeShort(buffer:Uint8Array):number{\r\n\r\n        let n = buffer[0] << 8 | buffer[1];\r\n\r\n        return n;\r\n    }\r\n\r\n\r\n    public static encodeByte(n:number):Uint8Array{\r\n\r\n        let buffer : Uint8Array = new Uint8Array(1)\r\n        buffer[0] = n & 0xff;\r\n\r\n        return buffer;\r\n    }\r\n\r\n    public static decodeByte(buffer:Uint8Array):number{\r\n\r\n        let n = buffer[0];\r\n\r\n        return n;\r\n    }\r\n\r\n\r\n\r\n}","\r\n\r\n export class NetErrorCode\r\n {\r\n     public static  ERR_SocketConnSucc:number = 100000;\r\n\r\n     public static  ERR_ConnectGateKeyError:number = 100006;\r\n\r\n     public static  ERR_PeerDisconnect:number   = 102008;\r\n     public static  ERR_SocketCantSend:number   = 102009;\r\n     public static  ERR_SocketError:number      = 102010;\r\n     public static  ERR_SocketConnError:number  = 102011;\r\n\r\n\r\n     \r\n\r\n }","\r\nimport { Opcode } from \"../../data/pb/Opcode\";\r\nimport { GameConfig } from \"../../global/GameConfig\";\r\nimport { Singleton } from \"../common/Singleton\";\r\nimport { Logger } from \"../logger/Logger\";\r\nimport { GameSession } from \"./GameSession\";\r\nimport { NetErrorCode } from \"./NetErrorCode\";\r\n\r\n\r\nexport class SessionManager extends Singleton<SessionManager>{\r\n\r\n    private sessionReam:GameSession;\r\n    private sessionGate:GameSession;\r\n\r\n\r\n    public get realmRpcID(){\r\n        return this.sessionReam.rpcId;\r\n    }\r\n\r\n    public get gateRpcID(){\r\n        return this.sessionGate.rpcId;\r\n    }\r\n\r\n    public async connectRealmServer():Promise<boolean> {\r\n\r\n        let promise = new Promise<boolean>(resove =>{\r\n            this.sessionReam = GameSession.Instance(GameSession).connectChannel(\r\n                GameConfig.realmServerIP+\":\"+GameConfig.realmServerPort,\r\n                (channel:any,code:number)=>{\r\n                    if(code == NetErrorCode.ERR_SocketConnSucc){\r\n                        this.sessionReam.id = channel.Id;\r\n                  \r\n                        resove(true);\r\n                    }else{\r\n            \r\n                        resove(false);\r\n            \r\n                        Logger.error(\"login reamserver err, code: \"+code + \",id:\"+channel.Id);\r\n            \r\n                    }\r\n                }\r\n            );\r\n\r\n        });\r\n        return promise\r\n    }\r\n\r\n    \r\n    public disconnectRealmServer(){\r\n        this.sessionReam.disconnect();\r\n        this.sessionReam = null;\r\n    }\r\n\r\n\r\n    public async sendRealmMsg(opcode:number,msg:any):Promise<any>{\r\n        \r\n        let rpcID = this.sessionReam.rpcId\r\n        let promise = new Promise<any>((resove) => {\r\n\r\n            let buf = Opcode.encode(opcode, msg)\r\n\r\n            this.sessionReam.send(opcode, rpcID, buf, (response:any)=>{\r\n            \r\n                resove(response)\r\n            });\r\n        })\r\n        \r\n        return promise\r\n    }\r\n\r\n\r\n    public async connectGateServer(address:string):Promise<boolean>{\r\n\r\n        let promise = new Promise<boolean>(resove =>{\r\n            this.sessionGate = GameSession.Instance(GameSession).connectChannel(\r\n                address,\r\n                (channel:any,code:number)=>{\r\n                    Logger.log(\"login Gate Server: \"+code);\r\n    \r\n                    if(code == NetErrorCode.ERR_SocketConnSucc){\r\n                        this.sessionGate.id = channel.Id;\r\n                    \r\n                        resove(true)\r\n                    }else{\r\n                        resove(false)\r\n            \r\n                        Logger.error(\"gate server err, code: \"+code + \",id:\"+channel.Id);\r\n                    }\r\n                }\r\n            );\r\n\r\n        });\r\n        return promise\r\n    }\r\n\r\n\r\n    public disconnectGateServer(){\r\n        this.sessionGate.disconnect();\r\n        this.sessionGate = null;\r\n    }\r\n\r\n    public async sendGateMsg(opcode:number, msg:any):Promise<any>{\r\n\r\n        let rpcID = this.sessionGate.rpcId\r\n        let promise = new Promise<any>((resove) => {\r\n\r\n            let buf = Opcode.encode(opcode, msg)\r\n\r\n            this.sessionGate.send(opcode, rpcID, buf, (response:any)=>{\r\n            \r\n                resove(response)\r\n            });\r\n        })\r\n        \r\n        return promise\r\n\r\n    }\r\n}   \r\n","import { UnityEngine } from \"csharp\";\r\nimport { S } from \"../../global/GameConfig\";\r\n\r\nexport abstract class BaseScene{\r\n\r\n    private preloadPrefab:Map<string,number>;\r\n    private sceneInstance:UnityEngine.ResourceManagement.ResourceProviders.SceneInstance\r\n\r\n    public finishCount = 0;\r\n    public totalCount = 0;\r\n\r\n    constructor(){\r\n        this.preloadPrefab = new Map<string,number>();\r\n        this.finishCount = 0;\r\n    }\r\n\r\n    public addPreloadPrefab(address:string, instCount){\r\n        if(!this.preloadPrefab.has(address))\r\n        {\r\n            this.preloadPrefab.set(address, instCount);\r\n            return\r\n        }\r\n        this.preloadPrefab.set(address, this.preloadPrefab.get(address) + instCount);\r\n    }\r\n\r\n    public setSceneInstance(sceneInstance:UnityEngine.ResourceManagement.ResourceProviders.SceneInstance){\r\n        this.sceneInstance = sceneInstance;\r\n    }\r\n\r\n    public abstract onEnter();\r\n    public abstract onComplete();\r\n    public abstract onLeave();\r\n\r\n    public async loadAssetsAsync(){\r\n\r\n        this.totalCount = this.preloadPrefab.size;\r\n\r\n        let premises = [];\r\n\r\n        this.preloadPrefab.forEach((value, key)=>{\r\n            let premise = S.GameObjectPool.preLoadGameObjectAsync(key, value,()=>{\r\n                this.finishCount++;\r\n            })\r\n            premises.push(premise);\r\n        });\r\n\r\n        await Promise.all(premises);\r\n    }\r\n\r\n    public onDestroy(){\r\n \r\n        //清理资源缓存\r\n        S.GameObjectPool.cleanup(true);\r\n\r\n        //卸载场景\r\n        S.ResManager.unloadScene(this.sceneInstance);\r\n        \r\n        this.preloadPrefab.clear();\r\n    }\r\n}","export  class SceneDef{\r\n\r\n    public static LoadingScene:string = \"LoadingScene\";\r\n    public static GameStart:string = \"GameStartScene\";\r\n    public static FlyBird:string = \"FlyBirdScene\";\r\n    public static LaunchScene:string = \"LaunchScene\";\r\n    public static HomeScene:string = \"HomeScene\";\r\n    public static LoginScene:string = \"LoginScene\";\r\n    public static PveScene:string = \"PveScene\";\r\n}\r\n","import { BaseScene } from \"./BaseScene\";\r\nimport { PveScene } from \"../../game/module/pve/scene/PveScene\";\r\nimport { HomeScene } from \"../../game/module/home/scene/HomeScene\";\r\n// import { LoginScene } from \"../../game/module/login/scene/LoginScene\";\r\nimport { SceneDef } from \"./SceneDef\";\r\nimport { GameStartScene } from \"../../game/module/gamestart/scene/GameStartScene\";\r\nimport { FlyBirdScene } from \"../../game/module/flybird/scene/FlyBirdScene\";\r\n\r\n\r\n\r\nexport class SceneFactory{\r\n\r\n\r\n    public static createScene(sceneName:string):BaseScene{\r\n\r\n        let scene:BaseScene = null;\r\n\r\n        switch (sceneName){\r\n            case SceneDef.GameStart:\r\n                scene = new GameStartScene();\r\n                break;\r\n            case SceneDef.FlyBird:\r\n                scene = new FlyBirdScene();\r\n                break;\r\n            case SceneDef.HomeScene:\r\n                scene = new HomeScene();\r\n                break;\r\n            case SceneDef.PveScene:\r\n                scene = new PveScene();\r\n                break;\r\n        }\r\n\r\n        return scene;\r\n    }\r\n}","import { CommonUI } from \"../../data/ui/common\";\r\nimport { UIMessage } from \"../../game/event/UIMessage\";\r\nimport { S } from \"../../global/GameConfig\";\r\nimport { Singleton } from \"../common/Singleton\";\r\nimport { Logger } from \"../logger/Logger\";\r\nimport { BaseScene } from \"./BaseScene\";\r\nimport { SceneFactory } from \"./SceneFactory\";\r\n\r\n\r\n\r\n\r\nexport class SceneManager extends Singleton<SceneManager>{\r\n\r\n    private currentScene:BaseScene = null;\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    public async loadScene(scene:string){\r\n        \r\n        try{\r\n\r\n            //打开Loading界面\r\n            S.UIManager.openLoading(CommonUI.PackageName, CommonUI.UILoadingView);\r\n\r\n            //清理旧场景\r\n            if(this.currentScene){\r\n                this.currentScene.onLeave();\r\n                this.currentScene.onDestroy();\r\n            }\r\n\r\n            //开始加载场景\r\n            let sceneInstance = await S.ResManager.loadScene(scene);\r\n\r\n            //开始加载进入场景的资源\r\n            this.currentScene =  SceneFactory.createScene(scene);\r\n            this.currentScene.setSceneInstance(sceneInstance);\r\n            this.currentScene.onEnter();\r\n\r\n            //设置当前场景加载进度Timer\r\n            let progressInterval = setInterval(()=>{\r\n\r\n                let progress = this.currentScene.finishCount/this.currentScene.totalCount;\r\n                Logger.log(\"progress:\"+progress + \" = \"+this.currentScene.finishCount + \" = \"+this.currentScene.totalCount);\r\n\r\n                S.UIMessageManger.broadcast(\r\n                    UIMessage.MSG_SCENE_PROGRESS,\r\n                    progress*100);\r\n\r\n            }, 100);\r\n\r\n            //加载资源\r\n            await this.currentScene.loadAssetsAsync();\r\n\r\n            //加载完成\r\n            clearInterval(progressInterval)\r\n\r\n            //关闭所有Page\r\n            S.UIManager.closeAllPanels();\r\n\r\n            await this.currentScene.onComplete()\r\n            S.UIManager.closeLoading();\r\n\r\n        }catch(ex){\r\n            Logger.log(\"load scene excep:\"+ex);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    \r\n}","\r\nexport class UIBase {\r\n\r\n    public fui:any;  //FairyGUI 对象\r\n\r\n\r\n    //绑定FairyGUI元件\r\n    public bindAll(target:any):void{\r\n        for(let k in target[\"binders\"]){\r\n            let fguiName = this[\"binders\"][k];\r\n            this[k] = this.fui.GetChild(fguiName);\r\n        }\r\n    }\r\n\r\n        \r\n\r\n}","\r\n\r\n\r\nexport enum UITypeDef{\r\n    Unkown = 0,\r\n    Page = 1,\r\n    Window=2,\r\n    Widget = 3,\r\n    Loading =4\r\n}\r\n\r\nexport class UILayerDef{\r\n\r\n    public static Background:number = 0;\r\n    public static Page:number = 1000;\r\n    public static NormalWindow:number = 2000;\r\n    public static TopWindow:number = 3000;\r\n    public static Widget:number = 4000;\r\n    public static Loading:number = 5000;\r\n    public static Unkown:number = 9999;\r\n\r\n    public static  getDefaultLayer(type:UITypeDef):number{\r\n\r\n        switch(type){\r\n            case UITypeDef.Loading: return this.Loading;\r\n            case UITypeDef.Widget: return this.Widget;\r\n            case UITypeDef.Window: return this.NormalWindow;\r\n            case UITypeDef.Page: return this.Page;\r\n            case UITypeDef.Unkown: return this.Unkown;\r\n            default: return this.Unkown; \r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class UIComDefs{\r\n    public static BackBtn = \"back_btn\";\r\n    public static WindowCloseBtn = \"win_close_btn\";\r\n}\r\n\r\n\r\n\r\n","\r\nimport { UIPanel } from \"./UIPanel\";\r\nimport { UILoading } from \"./UILib/UILoading\";\r\nimport { Logger } from \"../logger/Logger\";\r\nimport { CommonUI } from \"../../data/ui/common\";\r\nimport { FlyBirdUI } from \"../../data/ui/FlyBird\";\r\nimport { GameStartUI } from \"../../data/ui/GameStart\";\r\nimport { UIStartView } from \"../../game/module/gamestart/ui/UIStartView\";\r\nimport { UIFlyBirdMainView } from \"../../game/module/flybird/ui/UIFlyBirdMainView\";\r\n\r\n\r\n\r\nconst CS = require('csharp');\r\n\r\n\r\nexport class UIFactory{\r\n\r\n    public static uiCache:Map<string,UIPanel> = new Map<string,UIPanel>();\r\n\r\n    public static createUI(pkg:string, name:string){\r\n        Logger.log(`create UI: ${pkg}:${name}`)\r\n        let comp = CS.FairyGUI.UIPackage.CreateObject(pkg, name).asCom\r\n        \r\n        let ui:UIPanel = this.uiCache.get(name);\r\n\r\n        if(!ui){\r\n\r\n            switch(pkg){\r\n                case CommonUI.PackageName:\r\n                    switch (name){\r\n                        case CommonUI.UILoadingView:\r\n                            ui = new UILoading();\r\n                            break;\r\n                    }\r\n                    break\r\n                case FlyBirdUI.PackageName:\r\n                    switch (name){\r\n                        case FlyBirdUI.UIMainVIew:\r\n                            ui = new UIFlyBirdMainView();\r\n                            break;\r\n                    }\r\n                    break\r\n                case GameStartUI.PackageName:\r\n                    switch (name){\r\n                        case GameStartUI.UIStartView:\r\n                            ui = new UIStartView();\r\n                            break;\r\n                    }\r\n                    break\r\n            }\r\n\r\n            this.uiCache.set(name, ui);\r\n        }\r\n        \r\n        if(ui!=null){\r\n            ui.fui = comp;\r\n            ui.name = name;\r\n            ui.pkgName = pkg;\r\n\r\n            //绑定FairyGUI控件\r\n            ui.bindAll(ui);\r\n            ui.awake();\r\n        \r\n        }else{\r\n            Logger.error(`not create ui: ${pkg}-${name}`);\r\n        }\r\n\r\n        return ui;\r\n    }\r\n\r\n\r\n\r\n}","import { UIPanel } from \"../UIPanel\";\r\nimport { UITypeDef } from \"../UIDefine\";\r\nimport { FairyGUI } from \"csharp\";\r\nimport { binder } from \"../../common/NiceDecorator\";\r\nimport { UIMessage } from \"../../../game/event/UIMessage\";\r\nimport { S } from \"../../../global/GameConfig\";\r\n\r\n\r\n\r\nexport class  UILoading extends UIPanel{\r\n\r\n\r\n    @binder(\"loading_pregress\")\r\n    public progressLoading: FairyGUI.GProgressBar;\r\n\r\n\r\n\r\n    public onAwake(): void {\r\n       \r\n    }\r\n    \r\n    public get uiType(): UITypeDef {    \r\n        return UITypeDef.Loading;\r\n    }\r\n\r\n    public onShow(arg:any):void{\r\n        this.progressLoading.value = 0;\r\n        this.progressLoading.visible = true;\r\n\r\n        S.UIMessageManger.addListener(\r\n            UIMessage.MSG_SCENE_PROGRESS,\r\n            this,\r\n            (progress:number)=>{\r\n                this.progressLoading.TweenValue(progress, 0.1);\r\n            });\r\n    }\r\n\r\n    public onClose(arg:any):void{\r\n        this.progressLoading.visible = false;\r\n        S.UIMessageManger.removeListenerByCode(\r\n            UIMessage.MSG_SCENE_PROGRESS\r\n        );\r\n    }\r\n\r\n\r\n}","\r\nimport { Singleton } from '../common/Singleton';\r\nimport { UILoading } from './UILib/UILoading';\r\nimport { UIWindow } from './UIWindow';\r\nimport { UIWidge } from './UIWidge';\r\nimport { UIPanel } from './UIPanel';\r\nimport { UIFactory } from './UIFactory';\r\nimport { S } from '../../global/GameConfig';\r\nimport { Logger } from '../logger/Logger';\r\n\r\n\r\nexport class UIPageTrack{\r\n    public pkg:string;\r\n    public name:string;\r\n    public arg:any;\r\n    public ui:UIPanel;\r\n}\r\n\r\n\r\nexport class UIManager extends Singleton<UIManager>{\r\n\r\n    private  m_pageTrackStack:Array<UIPageTrack>;\r\n    private m_currentPage:UIPageTrack;\r\n    private m_lastScensePage:UIPageTrack;\r\n\r\n    private m_listLoadedPanel:Array<UIPanel>;\r\n\r\n    private m_loadingPage:UIPanel;\r\n    private m_gmPage:UIPanel;\r\n\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.m_pageTrackStack = new Array<UIPageTrack>();\r\n        this.m_listLoadedPanel = new Array<UIPanel>();\r\n\r\n    }\r\n\r\n    public update(delta:number){\r\n        for (let i = 0; i < this.m_listLoadedPanel.length; ++i) {\r\n            this.m_listLoadedPanel[i].update(delta);            \r\n        }\r\n        this.m_currentPage?.ui?.update(delta)\r\n        this.m_lastScensePage?.ui?.update(delta)\r\n    }\r\n\r\n    private distroyPanel(panel:UIPanel){\r\n        if(panel.isOpen){\r\n            panel.close();\r\n        }\r\n        //卸载资源\r\n        S.ResManager.releaseFairyGUIPackage(panel.pkgName);\r\n        panel.dispose();  \r\n    }\r\n\r\n    private distroyAllLoadedPanel():void{\r\n        for(let i= this.m_listLoadedPanel.length-1; i>=0; i--){\r\n            let panel = this.m_listLoadedPanel[i];\r\n\r\n            this.distroyPanel(panel);\r\n            this.m_listLoadedPanel.splice(i, 1);\r\n        }\r\n    }\r\n\r\n    public clean():void{\r\n\r\n        this.distroyAllLoadedPanel();\r\n\r\n        this.m_pageTrackStack.length = 0;\r\n        this.m_listLoadedPanel.length = 0;\r\n    }\r\n\r\n    public getPanelUI(name:string):UIPanel{\r\n\r\n        for (const panel of this.m_listLoadedPanel) {\r\n            if(panel.name == name){\r\n\r\n                Logger.log(\"find panel in cache: \"+name);\r\n\r\n                return panel;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public async open(pkg:string, name:string, arg?:any){\r\n   \r\n        let ui:any = this.getPanelUI(name);\r\n\r\n        if(ui == null){\r\n            //加载 package\r\n            await S.ResManager.loadFairyGUIPackage(pkg);\r\n            ui = UIFactory.createUI(pkg, name);\r\n            this.m_listLoadedPanel.push(ui);\r\n        }\r\n\r\n        if(ui != null){\r\n            // ###  ui as any 调用私有方法\r\n            (ui as any)._internalOpen(arg);\r\n        }\r\n\r\n        return ui;\r\n    }\r\n\r\n\r\n    private async openPageWorker(pkg:string, page:string, arg:any){\r\n\r\n        //设置 m_currentPage\r\n        this.m_currentPage = new UIPageTrack();\r\n       \r\n        this.m_currentPage.pkg = pkg;\r\n        this.m_currentPage.name = page;\r\n        this.m_currentPage.arg = arg;\r\n\r\n        //打开新Page\r\n        await S.ResManager.loadFairyGUIPackage(pkg);\r\n        let ui = UIFactory.createUI(pkg, page);\r\n        (ui as any)._internalOpen(arg);\r\n\r\n        //保存到 m_currentPage\r\n        this.m_currentPage.ui = ui;\r\n\r\n        //销毁当前page 中打开的各自Panels\r\n        this.distroyAllLoadedPanel();\r\n\r\n        return this.m_currentPage;\r\n    }\r\n    \r\n     //==========================================================UIPage\r\n    //打开场景页面,此页面不计入页面栈,无返回上一面按钮\r\n    public async openPageInScene(pkg:string, page:string, arg:any){\r\n        \r\n        let _openPage = await this.openPageWorker(pkg, page, arg);\r\n\r\n        if(this.m_lastScensePage){\r\n            this.distroyPanel(this.m_lastScensePage.ui);\r\n        }\r\n        this.m_lastScensePage = _openPage;\r\n    }\r\n\r\n    //打开页面, 会关闭上一个页面上的所有窗口,Widiget等\r\n    public async openPage(pkg:string, name:string, arg?:any){\r\n\r\n        //1, 检查栈中是否存在此页面\r\n        let len = this.m_pageTrackStack.length;\r\n        for(let i = len-1; i >= 0 ;i--){\r\n            let track = this.m_pageTrackStack[i];\r\n            if(track.pkg == pkg && track.name == name){\r\n                \r\n                this.distroyAllLoadedPanel();\r\n                this.distroyPanel(this.m_currentPage.ui);\r\n               \r\n                track.ui.visible = true;\r\n                track.ui.onShow(track.arg);\r\n               \r\n                \r\n                //卸载此页栈上面的界面\r\n                for(let j = len -1; j > i; j--){\r\n                    let del_track = this.m_pageTrackStack[j];\r\n                    this.distroyPanel(del_track.ui);\r\n                    this.m_pageTrackStack.slice(j,1);\r\n                }\r\n               \r\n                this.m_currentPage = this.m_pageTrackStack.pop();\r\n                return this.m_currentPage;\r\n            }\r\n        }\r\n\r\n        //2 先把当前Page入栈\r\n        if(this.m_currentPage != undefined && this.m_currentPage.name!=name){\r\n            this.m_pageTrackStack.push(this.m_currentPage);\r\n        }\r\n\r\n        //将栈中其它Page 设为不可见\r\n        for(let track of this.m_pageTrackStack){\r\n            track.ui.visible = false;\r\n        }\r\n\r\n        await this.openPageWorker(pkg, name, arg);\r\n    }\r\n\r\n\r\n    //返回上一个页面\r\n    public async goBackPage(){\r\n\r\n        if(this.m_pageTrackStack.length > 0){\r\n\r\n            //关闭当前页面\r\n            this.distroyAllLoadedPanel();\r\n            this.distroyPanel(this.m_currentPage.ui);\r\n\r\n            //打开堆栈中的上一页面\r\n            let track = this.m_pageTrackStack.pop();\r\n            track.ui.visible = true;\r\n            this.m_currentPage = track;\r\n\r\n            track.ui.onShow(track.arg);\r\n    \r\n            \r\n        }else{\r\n            await this.enterMainPage();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //回到主城\r\n    public enterMainPage():void{\r\n\r\n         //将栈中其它Page 设为不可见\r\n         for(let track of this.m_pageTrackStack){\r\n            this.distroyPanel(track.ui);\r\n        }\r\n        this.m_pageTrackStack.length = 0;\r\n    }\r\n\r\n    //==========================================================UILoading\r\n    //打开Loading界面\r\n    public async openLoading(pkg:string, name:string, arg?:any){\r\n        if(!this.m_loadingPage){\r\n            this.m_loadingPage = UIFactory.createUI(pkg, name);\r\n        }\r\n        (this.m_loadingPage as any)._internalOpen(arg);\r\n       \r\n    }\r\n\r\n    //关闭Loading界面\r\n    public closeLoading(arg?:any):void{\r\n        if(this.m_loadingPage){\r\n            this.m_loadingPage.close(arg);\r\n        }\r\n    }\r\n\r\n    //==========================================================UIWindow\r\n    //打开窗口\r\n    public async openWindow(pkg:string, name:string, arg:any){\r\n\r\n        let ui:UIWindow = await this.open(pkg, name, arg);\r\n\r\n        return ui;\r\n    }\r\n\r\n    //关闭窗口\r\n    public closeWindow(name:string, arg:any){\r\n\r\n        let ui:UIWindow = this.getPanelUI(name) as UIWindow;\r\n        if(ui != null){\r\n            ui.close(arg);\r\n        }\r\n    }\r\n\r\n    //==========================================================UIWidget\r\n    //打开Widiget\r\n    public async openWidget(pkg:string, name:string, arg:any){\r\n\r\n        let ui:UIWidge = await this.open(pkg, name, arg);\r\n\r\n        return ui;\r\n    }\r\n\r\n    //u关闭Widiget\r\n    public closeWidget(name:string, arg:any){\r\n\r\n        let ui:UIWidge = this.getPanelUI(name) as UIWidge;\r\n        if(ui!=null){\r\n            ui.close(arg);\r\n        }\r\n    }\r\n\r\n    public closeAllPanels(){\r\n        //删除除Loading界面外的所有Window, Widget\r\n        this.distroyAllLoadedPanel();\r\n        //删除所有Page\r\n        let len = this.m_pageTrackStack.length;\r\n        for(let i = len-1; i >= 0 ;i--){\r\n            let track = this.m_pageTrackStack[i];\r\n            \r\n            this.distroyPanel(track.ui);\r\n            this.m_pageTrackStack.slice(i,1);\r\n        }\r\n    }\r\n}","import { UIPanel } from \"./UIPanel\";\r\nimport { UITypeDef, UIComDefs } from \"./UIDefine\";\r\nimport { FairyGUI } from \"csharp\";\r\nimport { S } from \"../../global/GameConfig\";\r\n\r\n\r\n\r\nexport abstract class UIPage extends UIPanel{\r\n    public get uiType(): UITypeDef {    \r\n        return UITypeDef.Page;\r\n    }\r\n\r\n    private m_btnGoBack:FairyGUI.GButton;\r\n\r\n\r\n    public onAwake():void{\r\n        \r\n        this.m_btnGoBack = this.fui.GetChild(UIComDefs.BackBtn);\r\n\r\n        if(this.m_btnGoBack!=undefined){\r\n            this.m_btnGoBack.onClick.Add(()=>{\r\n                this.onBtnGoBack();\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    public onShow(vo:any):void{\r\n\r\n    \r\n    }\r\n\r\n    public onClose(arg:any):void{\r\n   \r\n    }\r\n\r\n    private onBtnGoBack(){\r\n        S.UIManager.goBackPage();\r\n    }\r\n\r\n} ","import { UITypeDef, UILayerDef } from \"./UIDefine\";\r\nimport { FairyGUI } from \"csharp\";\r\nimport { S } from \"../../global/GameConfig\";\r\nimport { UIBase } from \"./UIBase\";\r\nimport { UIComponent } from \"./UIComponent\";\r\nimport { List } from \"../common/List\";\r\n\r\nexport abstract class UIPanel extends UIBase {\r\n\r\n    public pkgName:string;\r\n    private _name:string;\r\n    private _timer;\r\n\r\n    private _components:List<string> = new List();\r\n    private _uiComponents:List<UIComponent>=new List();\r\n\r\n\r\n    public set name(v:string){\r\n        this._name = v;\r\n    }\r\n    public get name():string{\r\n        return this._name;\r\n    }\r\n\r\n    public get uiType(): UITypeDef {    \r\n        return UITypeDef.Unkown;\r\n    }\r\n    \r\n    private m_layer:UILayerDef = UILayerDef.Unkown;\r\n    public get layer() : UILayerDef {\r\n        return this.m_layer; \r\n    }\r\n    public set layer(v : UILayerDef) {\r\n        this.m_layer = v;\r\n    }\r\n    \r\n    public  get isOpen() : boolean{\r\n\r\n        return this.fui.visible;\r\n    }\r\n\r\n    public set visible(isActivate:boolean){\r\n\r\n        this.fui.visible = isActivate;\r\n    }\r\n\r\n    public abstract onAwake():void;\r\n    public abstract onShow(vo?:any):void;\r\n    public abstract onClose(arg?:any):void;\r\n\r\n    /**\r\n     * Unity中的Update方法\r\n     * @param delta 每帧花的时间\r\n     */\r\n    protected onUpdate(delta?:number):void{\r\n\r\n    }\r\n\r\n    public onDispose(){};\r\n\r\n    public awake():void{\r\n        this.onAwake();\r\n        \r\n    }\r\n\r\n    public startTimer()\r\n    {\r\n        if(!this._timer)\r\n            this._timer=setInterval(this.update.bind(this),200);\r\n    }\r\n\r\n\r\n    public update(delta:number):void{\r\n        this.onUpdate(delta);\r\n    }\r\n\r\n    /**\r\n     * 此私有方法在UI Manager中调用 ，特殊调用。\r\n     * @param arg \r\n     */\r\n    private _internalOpen(arg:any):void{\r\n        \r\n        this.layer = UILayerDef.getDefaultLayer(this.uiType);\r\n        FairyGUI.GRoot.inst.AddChild(this.fui);\r\n\r\n        this.onShow(arg);\r\n    }\r\n\r\n    public async createComponent<T extends UIComponent>(pkg:string, name:string,cls:{new():T}):Promise<T>\r\n    {\r\n        //加载组件Package资源\r\n        if(pkg != this.pkgName && !this._components.contains(pkg)){\r\n            await S.ResManager.loadFairyGUIPackage(pkg);\r\n            this._components.add(pkg);\r\n        }\r\n        \r\n        let comp=new cls();\r\n        comp.createUI(pkg,name);\r\n        this._uiComponents.add(comp);\r\n        return comp;\r\n    }\r\n\r\n\r\n    public close(arg:any = null):void{\r\n\r\n        this.onClose(arg);\r\n        FairyGUI.GRoot.inst.RemoveChild(this.fui);\r\n        if(this._timer)\r\n        {\r\n            clearInterval(this._timer);\r\n            this._timer=null;\r\n        }\r\n        \r\n    }\r\n\r\n    public dispose():void{\r\n\r\n        //卸载组件Package\r\n        this._components.foreach(element => {\r\n            S.ResManager.releaseFairyGUIPackage(element);\r\n        });\r\n        \r\n        this._uiComponents.forEach(element=>{\r\n             element.onClose();\r\n             if(element.parent!=undefined && element.parent!=null)\r\n             {\r\n                element.parent.RemoveChild(element.fui);\r\n             }\r\n             element.fui.Dispose();\r\n        })\r\n\r\n        this._components.clear();\r\n        this._uiComponents.clear();\r\n        this.fui.Dispose();\r\n        this.onDispose();\r\n    }\r\n\r\n\r\n}","\r\n\r\n\r\nexport class UIMessage{\r\n\r\n\r\n    public static MSG_SELECT_SERVER:number  = 1000;\r\n    public static MSG_SCENE_PROGRESS:number = 1001;\r\n    \r\n\r\n\r\n}","import { Messenger } from \"../../framework/common/Messenger\";\r\nimport { Singleton } from \"../../framework/common/Singleton\";\r\n\r\n\r\nexport class UIMessageManger extends Singleton<UIMessageManger>{\r\n\r\n    private uiMessage:Messenger = new Messenger();\r\n\r\n\r\n    public addListener(msgCode:number,obj:any, listener:Function){\r\n\r\n        this.uiMessage.addListener(msgCode, obj, listener);\r\n    }\r\n\r\n    public removeListener(msgCode:number, listener:Function){\r\n        this.uiMessage.removeListener(msgCode, listener);\r\n    }\r\n\r\n    public removeListenerByCode(msgCode:number){\r\n        this.uiMessage.removeListenerByType(msgCode);\r\n    }\r\n\r\n    public clearup(){\r\n        this.uiMessage.clearup();\r\n    }\r\n\r\n    public broadcast(msgCode:number,params:any){\r\n\r\n\r\n        this.uiMessage.broadcast(msgCode, params)\r\n    }\r\n}","// import { homeUI } from \"../../../../data/ui/home\";\r\nimport { FlyBirdUI } from \"../../../../data/ui/FlyBird\";\r\nimport { BaseScene } from \"../../../../framework/scene/BaseScene\";\r\nimport { S } from \"../../../../global/GameConfig\";\r\nimport { VoHome } from \"../../home/vo/VoHome\";\r\n\r\n\r\nexport class FlyBirdScene extends BaseScene{\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    public onEnter() {\r\n\r\n    }\r\n\r\n    public onComplete() {\r\n\r\n        let vo:VoHome = new VoHome();\r\n        vo.name = \"Justin\";\r\n        vo.hp = 1200;\r\n        vo.mp = 3300;\r\n        vo.money = 666;\r\n\r\n        S.UIManager.openPageInScene(\r\n            FlyBirdUI.PackageName,\r\n            FlyBirdUI.UIMainVIew,\r\n            vo);\r\n    }\r\n\r\n    public onLeave() {\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { UIPage } from \"../../../../framework/ui/UIPage\";\r\nimport { binder } from \"../../../../framework/common/NiceDecorator\";\r\nimport { FairyGUI, UnityEngine } from \"csharp\";\r\nimport { Logger } from \"../../../../framework/logger/Logger\";\r\n\r\n\r\n\r\nexport class UIFlyBirdMainView extends UIPage{\r\n\r\n    @binder(\"list_bg\")\r\n    public list_bg:FairyGUI.GList;\r\n\r\n    public onUpdate():void{\r\n    }\r\n\r\n    public onAwake():void{\r\n        super.onAwake();\r\n        console.log(\"开始界面3\")\r\n        this.list_bg.SetVirtualAndLoop();\r\n        this.list_bg.itemRenderer = (index:number, obj:FairyGUI.GObject)=>{\r\n            // this.renderServerListItem(index, obj);\r\n        };\r\n        this.list_bg.numItems = 3;\r\n    }\r\n    public onShow(vo):void{\r\n        super.onShow(vo);\r\n\r\n        // this.m_nameLbl.text = vo.name;\r\n        // this.m_mpLbl.text = vo.mp.toString();\r\n        // this.m_hpLbl.text = vo.hp.toString();\r\n        // this.m_moneyLbl.text = vo.money.toString();\r\n\r\n        // S.GameSession.listen(Opcode.MSG_GS2C_Test,function(msg:nice_ts.GS2C_Test){\r\n        //     Logger.log(\"收到服务器下发的消息。。。。\"+msg.testResponse)\r\n        // })\r\n    }\r\n    public onClose(arg:any):void{\r\n        super.onClose(arg);\r\n    }\r\n    public async click_btn_start(){\r\n        Logger.log(\"on chat...\");\r\n    }\r\n\r\n\r\n}","import { GameStartUI } from \"../../../../data/ui/GameStart\";\r\nimport { BaseScene } from \"../../../../framework/scene/BaseScene\";\r\nimport { S } from \"../../../../global/GameConfig\";\r\nimport { VoGameStart } from \"../vo/VoGameStart\";\r\n\r\n\r\nexport class GameStartScene extends BaseScene{\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        \r\n    }\r\n\r\n    public onEnter() {\r\n        console.log(\"进入开始场景\")\r\n    }\r\n\r\n    public onComplete() {\r\n\r\n        let vo:VoGameStart = new VoGameStart();\r\n\r\n        console.log(\"进入开始场景结束\")\r\n\r\n        S.UIManager.openPageInScene(\r\n            GameStartUI.PackageName,\r\n            GameStartUI.UIStartView,\r\n            vo);\r\n    }\r\n\r\n    public onLeave() {\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { UIPage } from \"../../../../framework/ui/UIPage\";\r\nimport { binder } from \"../../../../framework/common/NiceDecorator\";\r\nimport { FairyGUI } from \"csharp\";\r\nimport { LoginAPI } from \"../../../api/LoginAPI\";\r\nimport { Opcode } from \"../../../../data/pb/Opcode\";\r\nimport { nice_ts } from \"../../../../data/pb/gen/pb\";\r\nimport { S } from \"../../../../global/GameConfig\";\r\nimport { Logger } from \"../../../../framework/logger/Logger\";\r\nimport { SceneDef } from \"../../../../framework/scene/SceneDef\";\r\nimport { VoGameStart } from \"../vo/VoGameStart\";\r\n\r\n\r\n\r\nexport class UIStartView extends UIPage{\r\n\r\n    @binder(\"btn_start\")\r\n    public btn_start:FairyGUI.GButton;\r\n    // @binder(\"bagBtn\")\r\n    // public m_bagBtn:FairyGUI.GButton;\r\n    // @binder(\"shopBtn\")\r\n    // public m_shopBtn:FairyGUI.GButton;\r\n    // @binder(\"levelBtn\")\r\n    // public m_levelBtn:FairyGUI.GButton;\r\n\r\n    // @binder(\"nameTxt\")\r\n    // public m_nameLbl:FairyGUI.GLabel;\r\n    // @binder(\"hpTxt\")\r\n    // public m_hpLbl:FairyGUI.GLabel;\r\n    // @binder(\"mpTxt\")\r\n    // public m_mpLbl:FairyGUI.GLabel;\r\n    // @binder(\"moneyTxt\")\r\n    // public m_moneyLbl:FairyGUI.GLabel;\r\n\r\n\r\n    public onAwake():void{\r\n        super.onAwake();\r\n        console.log(\"开始界面\")\r\n        this.btn_start.onClick.Add(()=>{\r\n            console.log(\"2333\");\r\n            this.click_btn_start();\r\n        });\r\n    }\r\n\r\n    \r\n    public onShow(vo:VoGameStart):void{\r\n        super.onShow(vo);\r\n\r\n        // S.GameSession.listen(Opcode.MSG_GS2C_Test,function(msg:nice_ts.GS2C_Test){\r\n        //     Logger.log(\"收到服务器下发的消息。。。。\"+msg.testResponse)\r\n        // })\r\n    }\r\n    public onClose(arg:any):void{\r\n        super.onClose(arg);\r\n    }\r\n\r\n    public async click_btn_start(){\r\n        await S.SceneManager.loadScene(SceneDef.FlyBird);\r\n    }\r\n}","export class VoGameStart{\r\n    public name:string;\r\n    public hp:number;\r\n    public mp:number;\r\n    public money:number;\r\n}","// import { homeUI } from \"../../../../data/ui/home\";\r\nimport { BaseScene } from \"../../../../framework/scene/BaseScene\";\r\nimport { S } from \"../../../../global/GameConfig\";\r\nimport { VoHome } from \"../vo/VoHome\";\r\n\r\n\r\nexport class HomeScene extends BaseScene{\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        \r\n    }\r\n\r\n    public onEnter() {\r\n\r\n    }\r\n\r\n    public onComplete() {\r\n\r\n        let vo:VoHome = new VoHome();\r\n        vo.name = \"Justin\";\r\n        vo.hp = 1200;\r\n        vo.mp = 3300;\r\n        vo.money = 666;\r\n\r\n        // S.UIManager.openPageInScene(\r\n        //     homeUI.PackageName,\r\n        //     homeUI.UIHomePage,\r\n        //     vo);\r\n    }\r\n\r\n    public onLeave() {\r\n        \r\n    }\r\n\r\n\r\n\r\n}","\r\n\r\nexport class VoHome{\r\n\r\n    public name:string;\r\n    public hp:number;\r\n    public mp:number;\r\n    public money:number;\r\n\r\n}","import { BaseScene } from \"../../../../framework/scene/BaseScene\";\r\n\r\n\r\nexport class PveScene extends BaseScene{\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    public onEnter() {\r\n        \r\n    }\r\n    public onComplete() {\r\n        \r\n    }\r\n    public onLeave() {\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { JsManager } from \"csharp\";\r\nimport { GameObjectPool } from \"../framework/common/GameObjectPool\";\r\nimport { ResManager } from \"../framework/common/ResManager\";\r\n// import { StoryManager } from \"../framework/ink/StoryManager\";\r\n// import { StoryMessageManager } from \"../framework/ink/StoryMessageManager\";\r\nimport { GameSession } from \"../framework/net/GameSession\";\r\nimport { HttpManager } from \"../framework/net/HttpManager\";\r\nimport { SessionManager } from \"../framework/net/SessionManager\";\r\nimport { SceneManager } from \"../framework/scene/SceneManager\";\r\nimport { UIManager } from \"../framework/ui/UIManager\";\r\nimport { UIMessageManger } from \"../game/event/UIMessageManager\";\r\n\r\nexport  class GameConfig{\r\n\r\n    public static debug:boolean = true;\r\n\r\n    public static realmServerIP:string = \"127.0.0.1\"; \r\n    public static realmServerPort:number = 9001;\r\n\r\n}\r\n\r\nexport class S{\r\n    public static UIManager = UIManager.Instance(UIManager);\r\n    public static UIMessageManger = UIMessageManger.Instance(UIMessageManger);\r\n    public static SceneManager = SceneManager.Instance(SceneManager);\r\n    public static GameObjectPool = GameObjectPool.Instance(GameObjectPool);\r\n    public static ResManager = ResManager.Instance(ResManager);\r\n    // public static StoryManager = StoryManager.Instance(StoryManager);\r\n    public static SessionManager = SessionManager.Instance(SessionManager);\r\n    public static GameSession = GameSession.Instance(GameSession);\r\n    // public static StoryMessageManager = StoryMessageManager.Instance(StoryMessageManager);\r\n    public static HttpManager = HttpManager.Instance(HttpManager);\r\n}\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\r\n\"use strict\";\r\n\r\nvar $protobuf = require(\"protobufjs/minimal\");\r\n\r\n// Common aliases\r\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\r\n\r\nvar Long = require(\"long\");\r\n$protobuf.util.Long = Long;\r\n$protobuf.configure();\r\n\r\n\r\n// Exported root namespace\r\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\r\n\r\n$root.nice_ts = (function() {\r\n\r\n    /**\r\n     * Namespace nice_ts.\r\n     * @exports nice_ts\r\n     * @namespace\r\n     */\r\n    var nice_ts = {};\r\n\r\n    nice_ts.C2R_Login = (function() {\r\n\r\n        /**\r\n         * Properties of a C2R_Login.\r\n         * @memberof nice_ts\r\n         * @interface IC2R_Login\r\n         * @property {string|null} [Account] C2R_Login Account\r\n         * @property {string|null} [Password] C2R_Login Password\r\n         */\r\n\r\n        /**\r\n         * Constructs a new C2R_Login.\r\n         * @memberof nice_ts\r\n         * @classdesc Represents a C2R_Login.\r\n         * @implements IC2R_Login\r\n         * @constructor\r\n         * @param {nice_ts.IC2R_Login=} [properties] Properties to set\r\n         */\r\n        function C2R_Login(properties) {\r\n            if (properties)\r\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * C2R_Login Account.\r\n         * @member {string} Account\r\n         * @memberof nice_ts.C2R_Login\r\n         * @instance\r\n         */\r\n        C2R_Login.prototype.Account = \"\";\r\n\r\n        /**\r\n         * C2R_Login Password.\r\n         * @member {string} Password\r\n         * @memberof nice_ts.C2R_Login\r\n         * @instance\r\n         */\r\n        C2R_Login.prototype.Password = \"\";\r\n\r\n        /**\r\n         * Creates a new C2R_Login instance using the specified properties.\r\n         * @function create\r\n         * @memberof nice_ts.C2R_Login\r\n         * @static\r\n         * @param {nice_ts.IC2R_Login=} [properties] Properties to set\r\n         * @returns {nice_ts.C2R_Login} C2R_Login instance\r\n         */\r\n        C2R_Login.create = function create(properties) {\r\n            return new C2R_Login(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2R_Login message. Does not implicitly {@link nice_ts.C2R_Login.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof nice_ts.C2R_Login\r\n         * @static\r\n         * @param {nice_ts.IC2R_Login} message C2R_Login message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2R_Login.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            if (message.Account != null && Object.hasOwnProperty.call(message, \"Account\"))\r\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Account);\r\n            if (message.Password != null && Object.hasOwnProperty.call(message, \"Password\"))\r\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.Password);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2R_Login message, length delimited. Does not implicitly {@link nice_ts.C2R_Login.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof nice_ts.C2R_Login\r\n         * @static\r\n         * @param {nice_ts.IC2R_Login} message C2R_Login message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2R_Login.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2R_Login message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof nice_ts.C2R_Login\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {nice_ts.C2R_Login} C2R_Login\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2R_Login.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.nice_ts.C2R_Login();\r\n            while (reader.pos < end) {\r\n                var tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.Account = reader.string();\r\n                    break;\r\n                case 2:\r\n                    message.Password = reader.string();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2R_Login message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof nice_ts.C2R_Login\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {nice_ts.C2R_Login} C2R_Login\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2R_Login.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a C2R_Login message.\r\n         * @function verify\r\n         * @memberof nice_ts.C2R_Login\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        C2R_Login.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (message.Account != null && message.hasOwnProperty(\"Account\"))\r\n                if (!$util.isString(message.Account))\r\n                    return \"Account: string expected\";\r\n            if (message.Password != null && message.hasOwnProperty(\"Password\"))\r\n                if (!$util.isString(message.Password))\r\n                    return \"Password: string expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a C2R_Login message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof nice_ts.C2R_Login\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {nice_ts.C2R_Login} C2R_Login\r\n         */\r\n        C2R_Login.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.nice_ts.C2R_Login)\r\n                return object;\r\n            var message = new $root.nice_ts.C2R_Login();\r\n            if (object.Account != null)\r\n                message.Account = String(object.Account);\r\n            if (object.Password != null)\r\n                message.Password = String(object.Password);\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a C2R_Login message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof nice_ts.C2R_Login\r\n         * @static\r\n         * @param {nice_ts.C2R_Login} message C2R_Login\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        C2R_Login.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            var object = {};\r\n            if (options.defaults) {\r\n                object.Account = \"\";\r\n                object.Password = \"\";\r\n            }\r\n            if (message.Account != null && message.hasOwnProperty(\"Account\"))\r\n                object.Account = message.Account;\r\n            if (message.Password != null && message.hasOwnProperty(\"Password\"))\r\n                object.Password = message.Password;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this C2R_Login to JSON.\r\n         * @function toJSON\r\n         * @memberof nice_ts.C2R_Login\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        C2R_Login.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return C2R_Login;\r\n    })();\r\n\r\n    nice_ts.R2C_Login = (function() {\r\n\r\n        /**\r\n         * Properties of a R2C_Login.\r\n         * @memberof nice_ts\r\n         * @interface IR2C_Login\r\n         * @property {number|null} [Error] R2C_Login Error\r\n         * @property {string|null} [Message] R2C_Login Message\r\n         * @property {string|null} [Address] R2C_Login Address\r\n         * @property {number|Long|null} [Key] R2C_Login Key\r\n         * @property {number|Long|null} [GateId] R2C_Login GateId\r\n         */\r\n\r\n        /**\r\n         * Constructs a new R2C_Login.\r\n         * @memberof nice_ts\r\n         * @classdesc Represents a R2C_Login.\r\n         * @implements IR2C_Login\r\n         * @constructor\r\n         * @param {nice_ts.IR2C_Login=} [properties] Properties to set\r\n         */\r\n        function R2C_Login(properties) {\r\n            if (properties)\r\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * R2C_Login Error.\r\n         * @member {number} Error\r\n         * @memberof nice_ts.R2C_Login\r\n         * @instance\r\n         */\r\n        R2C_Login.prototype.Error = 0;\r\n\r\n        /**\r\n         * R2C_Login Message.\r\n         * @member {string} Message\r\n         * @memberof nice_ts.R2C_Login\r\n         * @instance\r\n         */\r\n        R2C_Login.prototype.Message = \"\";\r\n\r\n        /**\r\n         * R2C_Login Address.\r\n         * @member {string} Address\r\n         * @memberof nice_ts.R2C_Login\r\n         * @instance\r\n         */\r\n        R2C_Login.prototype.Address = \"\";\r\n\r\n        /**\r\n         * R2C_Login Key.\r\n         * @member {number|Long} Key\r\n         * @memberof nice_ts.R2C_Login\r\n         * @instance\r\n         */\r\n        R2C_Login.prototype.Key = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\r\n\r\n        /**\r\n         * R2C_Login GateId.\r\n         * @member {number|Long} GateId\r\n         * @memberof nice_ts.R2C_Login\r\n         * @instance\r\n         */\r\n        R2C_Login.prototype.GateId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\r\n\r\n        /**\r\n         * Creates a new R2C_Login instance using the specified properties.\r\n         * @function create\r\n         * @memberof nice_ts.R2C_Login\r\n         * @static\r\n         * @param {nice_ts.IR2C_Login=} [properties] Properties to set\r\n         * @returns {nice_ts.R2C_Login} R2C_Login instance\r\n         */\r\n        R2C_Login.create = function create(properties) {\r\n            return new R2C_Login(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified R2C_Login message. Does not implicitly {@link nice_ts.R2C_Login.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof nice_ts.R2C_Login\r\n         * @static\r\n         * @param {nice_ts.IR2C_Login} message R2C_Login message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        R2C_Login.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            if (message.Address != null && Object.hasOwnProperty.call(message, \"Address\"))\r\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.Address);\r\n            if (message.Key != null && Object.hasOwnProperty.call(message, \"Key\"))\r\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.Key);\r\n            if (message.GateId != null && Object.hasOwnProperty.call(message, \"GateId\"))\r\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.GateId);\r\n            if (message.Error != null && Object.hasOwnProperty.call(message, \"Error\"))\r\n                writer.uint32(/* id 91, wireType 0 =*/728).int32(message.Error);\r\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\r\n                writer.uint32(/* id 92, wireType 2 =*/738).string(message.Message);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified R2C_Login message, length delimited. Does not implicitly {@link nice_ts.R2C_Login.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof nice_ts.R2C_Login\r\n         * @static\r\n         * @param {nice_ts.IR2C_Login} message R2C_Login message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        R2C_Login.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a R2C_Login message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof nice_ts.R2C_Login\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {nice_ts.R2C_Login} R2C_Login\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        R2C_Login.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.nice_ts.R2C_Login();\r\n            while (reader.pos < end) {\r\n                var tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 91:\r\n                    message.Error = reader.int32();\r\n                    break;\r\n                case 92:\r\n                    message.Message = reader.string();\r\n                    break;\r\n                case 1:\r\n                    message.Address = reader.string();\r\n                    break;\r\n                case 2:\r\n                    message.Key = reader.int64();\r\n                    break;\r\n                case 3:\r\n                    message.GateId = reader.int64();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a R2C_Login message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof nice_ts.R2C_Login\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {nice_ts.R2C_Login} R2C_Login\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        R2C_Login.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a R2C_Login message.\r\n         * @function verify\r\n         * @memberof nice_ts.R2C_Login\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        R2C_Login.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\r\n                if (!$util.isInteger(message.Error))\r\n                    return \"Error: integer expected\";\r\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\r\n                if (!$util.isString(message.Message))\r\n                    return \"Message: string expected\";\r\n            if (message.Address != null && message.hasOwnProperty(\"Address\"))\r\n                if (!$util.isString(message.Address))\r\n                    return \"Address: string expected\";\r\n            if (message.Key != null && message.hasOwnProperty(\"Key\"))\r\n                if (!$util.isInteger(message.Key) && !(message.Key && $util.isInteger(message.Key.low) && $util.isInteger(message.Key.high)))\r\n                    return \"Key: integer|Long expected\";\r\n            if (message.GateId != null && message.hasOwnProperty(\"GateId\"))\r\n                if (!$util.isInteger(message.GateId) && !(message.GateId && $util.isInteger(message.GateId.low) && $util.isInteger(message.GateId.high)))\r\n                    return \"GateId: integer|Long expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a R2C_Login message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof nice_ts.R2C_Login\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {nice_ts.R2C_Login} R2C_Login\r\n         */\r\n        R2C_Login.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.nice_ts.R2C_Login)\r\n                return object;\r\n            var message = new $root.nice_ts.R2C_Login();\r\n            if (object.Error != null)\r\n                message.Error = object.Error | 0;\r\n            if (object.Message != null)\r\n                message.Message = String(object.Message);\r\n            if (object.Address != null)\r\n                message.Address = String(object.Address);\r\n            if (object.Key != null)\r\n                if ($util.Long)\r\n                    (message.Key = $util.Long.fromValue(object.Key)).unsigned = false;\r\n                else if (typeof object.Key === \"string\")\r\n                    message.Key = parseInt(object.Key, 10);\r\n                else if (typeof object.Key === \"number\")\r\n                    message.Key = object.Key;\r\n                else if (typeof object.Key === \"object\")\r\n                    message.Key = new $util.LongBits(object.Key.low >>> 0, object.Key.high >>> 0).toNumber();\r\n            if (object.GateId != null)\r\n                if ($util.Long)\r\n                    (message.GateId = $util.Long.fromValue(object.GateId)).unsigned = false;\r\n                else if (typeof object.GateId === \"string\")\r\n                    message.GateId = parseInt(object.GateId, 10);\r\n                else if (typeof object.GateId === \"number\")\r\n                    message.GateId = object.GateId;\r\n                else if (typeof object.GateId === \"object\")\r\n                    message.GateId = new $util.LongBits(object.GateId.low >>> 0, object.GateId.high >>> 0).toNumber();\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a R2C_Login message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof nice_ts.R2C_Login\r\n         * @static\r\n         * @param {nice_ts.R2C_Login} message R2C_Login\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        R2C_Login.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            var object = {};\r\n            if (options.defaults) {\r\n                object.Address = \"\";\r\n                if ($util.Long) {\r\n                    var long = new $util.Long(0, 0, false);\r\n                    object.Key = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\r\n                } else\r\n                    object.Key = options.longs === String ? \"0\" : 0;\r\n                if ($util.Long) {\r\n                    var long = new $util.Long(0, 0, false);\r\n                    object.GateId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\r\n                } else\r\n                    object.GateId = options.longs === String ? \"0\" : 0;\r\n                object.Error = 0;\r\n                object.Message = \"\";\r\n            }\r\n            if (message.Address != null && message.hasOwnProperty(\"Address\"))\r\n                object.Address = message.Address;\r\n            if (message.Key != null && message.hasOwnProperty(\"Key\"))\r\n                if (typeof message.Key === \"number\")\r\n                    object.Key = options.longs === String ? String(message.Key) : message.Key;\r\n                else\r\n                    object.Key = options.longs === String ? $util.Long.prototype.toString.call(message.Key) : options.longs === Number ? new $util.LongBits(message.Key.low >>> 0, message.Key.high >>> 0).toNumber() : message.Key;\r\n            if (message.GateId != null && message.hasOwnProperty(\"GateId\"))\r\n                if (typeof message.GateId === \"number\")\r\n                    object.GateId = options.longs === String ? String(message.GateId) : message.GateId;\r\n                else\r\n                    object.GateId = options.longs === String ? $util.Long.prototype.toString.call(message.GateId) : options.longs === Number ? new $util.LongBits(message.GateId.low >>> 0, message.GateId.high >>> 0).toNumber() : message.GateId;\r\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\r\n                object.Error = message.Error;\r\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\r\n                object.Message = message.Message;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this R2C_Login to JSON.\r\n         * @function toJSON\r\n         * @memberof nice_ts.R2C_Login\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        R2C_Login.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return R2C_Login;\r\n    })();\r\n\r\n    nice_ts.C2G_LoginGate = (function() {\r\n\r\n        /**\r\n         * Properties of a C2G_LoginGate.\r\n         * @memberof nice_ts\r\n         * @interface IC2G_LoginGate\r\n         * @property {number|Long|null} [Key] C2G_LoginGate Key\r\n         * @property {number|Long|null} [GateId] C2G_LoginGate GateId\r\n         */\r\n\r\n        /**\r\n         * Constructs a new C2G_LoginGate.\r\n         * @memberof nice_ts\r\n         * @classdesc Represents a C2G_LoginGate.\r\n         * @implements IC2G_LoginGate\r\n         * @constructor\r\n         * @param {nice_ts.IC2G_LoginGate=} [properties] Properties to set\r\n         */\r\n        function C2G_LoginGate(properties) {\r\n            if (properties)\r\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * C2G_LoginGate Key.\r\n         * @member {number|Long} Key\r\n         * @memberof nice_ts.C2G_LoginGate\r\n         * @instance\r\n         */\r\n        C2G_LoginGate.prototype.Key = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\r\n\r\n        /**\r\n         * C2G_LoginGate GateId.\r\n         * @member {number|Long} GateId\r\n         * @memberof nice_ts.C2G_LoginGate\r\n         * @instance\r\n         */\r\n        C2G_LoginGate.prototype.GateId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\r\n\r\n        /**\r\n         * Creates a new C2G_LoginGate instance using the specified properties.\r\n         * @function create\r\n         * @memberof nice_ts.C2G_LoginGate\r\n         * @static\r\n         * @param {nice_ts.IC2G_LoginGate=} [properties] Properties to set\r\n         * @returns {nice_ts.C2G_LoginGate} C2G_LoginGate instance\r\n         */\r\n        C2G_LoginGate.create = function create(properties) {\r\n            return new C2G_LoginGate(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2G_LoginGate message. Does not implicitly {@link nice_ts.C2G_LoginGate.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof nice_ts.C2G_LoginGate\r\n         * @static\r\n         * @param {nice_ts.IC2G_LoginGate} message C2G_LoginGate message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2G_LoginGate.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            if (message.Key != null && Object.hasOwnProperty.call(message, \"Key\"))\r\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.Key);\r\n            if (message.GateId != null && Object.hasOwnProperty.call(message, \"GateId\"))\r\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.GateId);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2G_LoginGate message, length delimited. Does not implicitly {@link nice_ts.C2G_LoginGate.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof nice_ts.C2G_LoginGate\r\n         * @static\r\n         * @param {nice_ts.IC2G_LoginGate} message C2G_LoginGate message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2G_LoginGate.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2G_LoginGate message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof nice_ts.C2G_LoginGate\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {nice_ts.C2G_LoginGate} C2G_LoginGate\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2G_LoginGate.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.nice_ts.C2G_LoginGate();\r\n            while (reader.pos < end) {\r\n                var tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.Key = reader.int64();\r\n                    break;\r\n                case 2:\r\n                    message.GateId = reader.int64();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2G_LoginGate message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof nice_ts.C2G_LoginGate\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {nice_ts.C2G_LoginGate} C2G_LoginGate\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2G_LoginGate.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a C2G_LoginGate message.\r\n         * @function verify\r\n         * @memberof nice_ts.C2G_LoginGate\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        C2G_LoginGate.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (message.Key != null && message.hasOwnProperty(\"Key\"))\r\n                if (!$util.isInteger(message.Key) && !(message.Key && $util.isInteger(message.Key.low) && $util.isInteger(message.Key.high)))\r\n                    return \"Key: integer|Long expected\";\r\n            if (message.GateId != null && message.hasOwnProperty(\"GateId\"))\r\n                if (!$util.isInteger(message.GateId) && !(message.GateId && $util.isInteger(message.GateId.low) && $util.isInteger(message.GateId.high)))\r\n                    return \"GateId: integer|Long expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a C2G_LoginGate message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof nice_ts.C2G_LoginGate\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {nice_ts.C2G_LoginGate} C2G_LoginGate\r\n         */\r\n        C2G_LoginGate.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.nice_ts.C2G_LoginGate)\r\n                return object;\r\n            var message = new $root.nice_ts.C2G_LoginGate();\r\n            if (object.Key != null)\r\n                if ($util.Long)\r\n                    (message.Key = $util.Long.fromValue(object.Key)).unsigned = false;\r\n                else if (typeof object.Key === \"string\")\r\n                    message.Key = parseInt(object.Key, 10);\r\n                else if (typeof object.Key === \"number\")\r\n                    message.Key = object.Key;\r\n                else if (typeof object.Key === \"object\")\r\n                    message.Key = new $util.LongBits(object.Key.low >>> 0, object.Key.high >>> 0).toNumber();\r\n            if (object.GateId != null)\r\n                if ($util.Long)\r\n                    (message.GateId = $util.Long.fromValue(object.GateId)).unsigned = false;\r\n                else if (typeof object.GateId === \"string\")\r\n                    message.GateId = parseInt(object.GateId, 10);\r\n                else if (typeof object.GateId === \"number\")\r\n                    message.GateId = object.GateId;\r\n                else if (typeof object.GateId === \"object\")\r\n                    message.GateId = new $util.LongBits(object.GateId.low >>> 0, object.GateId.high >>> 0).toNumber();\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a C2G_LoginGate message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof nice_ts.C2G_LoginGate\r\n         * @static\r\n         * @param {nice_ts.C2G_LoginGate} message C2G_LoginGate\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        C2G_LoginGate.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            var object = {};\r\n            if (options.defaults) {\r\n                if ($util.Long) {\r\n                    var long = new $util.Long(0, 0, false);\r\n                    object.Key = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\r\n                } else\r\n                    object.Key = options.longs === String ? \"0\" : 0;\r\n                if ($util.Long) {\r\n                    var long = new $util.Long(0, 0, false);\r\n                    object.GateId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\r\n                } else\r\n                    object.GateId = options.longs === String ? \"0\" : 0;\r\n            }\r\n            if (message.Key != null && message.hasOwnProperty(\"Key\"))\r\n                if (typeof message.Key === \"number\")\r\n                    object.Key = options.longs === String ? String(message.Key) : message.Key;\r\n                else\r\n                    object.Key = options.longs === String ? $util.Long.prototype.toString.call(message.Key) : options.longs === Number ? new $util.LongBits(message.Key.low >>> 0, message.Key.high >>> 0).toNumber() : message.Key;\r\n            if (message.GateId != null && message.hasOwnProperty(\"GateId\"))\r\n                if (typeof message.GateId === \"number\")\r\n                    object.GateId = options.longs === String ? String(message.GateId) : message.GateId;\r\n                else\r\n                    object.GateId = options.longs === String ? $util.Long.prototype.toString.call(message.GateId) : options.longs === Number ? new $util.LongBits(message.GateId.low >>> 0, message.GateId.high >>> 0).toNumber() : message.GateId;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this C2G_LoginGate to JSON.\r\n         * @function toJSON\r\n         * @memberof nice_ts.C2G_LoginGate\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        C2G_LoginGate.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return C2G_LoginGate;\r\n    })();\r\n\r\n    nice_ts.G2C_LoginGate = (function() {\r\n\r\n        /**\r\n         * Properties of a G2C_LoginGate.\r\n         * @memberof nice_ts\r\n         * @interface IG2C_LoginGate\r\n         * @property {number|null} [Error] G2C_LoginGate Error\r\n         * @property {string|null} [Message] G2C_LoginGate Message\r\n         * @property {number|Long|null} [PlayerId] G2C_LoginGate PlayerId\r\n         */\r\n\r\n        /**\r\n         * Constructs a new G2C_LoginGate.\r\n         * @memberof nice_ts\r\n         * @classdesc Represents a G2C_LoginGate.\r\n         * @implements IG2C_LoginGate\r\n         * @constructor\r\n         * @param {nice_ts.IG2C_LoginGate=} [properties] Properties to set\r\n         */\r\n        function G2C_LoginGate(properties) {\r\n            if (properties)\r\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * G2C_LoginGate Error.\r\n         * @member {number} Error\r\n         * @memberof nice_ts.G2C_LoginGate\r\n         * @instance\r\n         */\r\n        G2C_LoginGate.prototype.Error = 0;\r\n\r\n        /**\r\n         * G2C_LoginGate Message.\r\n         * @member {string} Message\r\n         * @memberof nice_ts.G2C_LoginGate\r\n         * @instance\r\n         */\r\n        G2C_LoginGate.prototype.Message = \"\";\r\n\r\n        /**\r\n         * G2C_LoginGate PlayerId.\r\n         * @member {number|Long} PlayerId\r\n         * @memberof nice_ts.G2C_LoginGate\r\n         * @instance\r\n         */\r\n        G2C_LoginGate.prototype.PlayerId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\r\n\r\n        /**\r\n         * Creates a new G2C_LoginGate instance using the specified properties.\r\n         * @function create\r\n         * @memberof nice_ts.G2C_LoginGate\r\n         * @static\r\n         * @param {nice_ts.IG2C_LoginGate=} [properties] Properties to set\r\n         * @returns {nice_ts.G2C_LoginGate} G2C_LoginGate instance\r\n         */\r\n        G2C_LoginGate.create = function create(properties) {\r\n            return new G2C_LoginGate(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified G2C_LoginGate message. Does not implicitly {@link nice_ts.G2C_LoginGate.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof nice_ts.G2C_LoginGate\r\n         * @static\r\n         * @param {nice_ts.IG2C_LoginGate} message G2C_LoginGate message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        G2C_LoginGate.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            if (message.PlayerId != null && Object.hasOwnProperty.call(message, \"PlayerId\"))\r\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.PlayerId);\r\n            if (message.Error != null && Object.hasOwnProperty.call(message, \"Error\"))\r\n                writer.uint32(/* id 91, wireType 0 =*/728).int32(message.Error);\r\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\r\n                writer.uint32(/* id 92, wireType 2 =*/738).string(message.Message);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified G2C_LoginGate message, length delimited. Does not implicitly {@link nice_ts.G2C_LoginGate.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof nice_ts.G2C_LoginGate\r\n         * @static\r\n         * @param {nice_ts.IG2C_LoginGate} message G2C_LoginGate message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        G2C_LoginGate.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a G2C_LoginGate message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof nice_ts.G2C_LoginGate\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {nice_ts.G2C_LoginGate} G2C_LoginGate\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        G2C_LoginGate.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.nice_ts.G2C_LoginGate();\r\n            while (reader.pos < end) {\r\n                var tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 91:\r\n                    message.Error = reader.int32();\r\n                    break;\r\n                case 92:\r\n                    message.Message = reader.string();\r\n                    break;\r\n                case 1:\r\n                    message.PlayerId = reader.int64();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a G2C_LoginGate message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof nice_ts.G2C_LoginGate\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {nice_ts.G2C_LoginGate} G2C_LoginGate\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        G2C_LoginGate.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a G2C_LoginGate message.\r\n         * @function verify\r\n         * @memberof nice_ts.G2C_LoginGate\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        G2C_LoginGate.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\r\n                if (!$util.isInteger(message.Error))\r\n                    return \"Error: integer expected\";\r\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\r\n                if (!$util.isString(message.Message))\r\n                    return \"Message: string expected\";\r\n            if (message.PlayerId != null && message.hasOwnProperty(\"PlayerId\"))\r\n                if (!$util.isInteger(message.PlayerId) && !(message.PlayerId && $util.isInteger(message.PlayerId.low) && $util.isInteger(message.PlayerId.high)))\r\n                    return \"PlayerId: integer|Long expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a G2C_LoginGate message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof nice_ts.G2C_LoginGate\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {nice_ts.G2C_LoginGate} G2C_LoginGate\r\n         */\r\n        G2C_LoginGate.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.nice_ts.G2C_LoginGate)\r\n                return object;\r\n            var message = new $root.nice_ts.G2C_LoginGate();\r\n            if (object.Error != null)\r\n                message.Error = object.Error | 0;\r\n            if (object.Message != null)\r\n                message.Message = String(object.Message);\r\n            if (object.PlayerId != null)\r\n                if ($util.Long)\r\n                    (message.PlayerId = $util.Long.fromValue(object.PlayerId)).unsigned = false;\r\n                else if (typeof object.PlayerId === \"string\")\r\n                    message.PlayerId = parseInt(object.PlayerId, 10);\r\n                else if (typeof object.PlayerId === \"number\")\r\n                    message.PlayerId = object.PlayerId;\r\n                else if (typeof object.PlayerId === \"object\")\r\n                    message.PlayerId = new $util.LongBits(object.PlayerId.low >>> 0, object.PlayerId.high >>> 0).toNumber();\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a G2C_LoginGate message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof nice_ts.G2C_LoginGate\r\n         * @static\r\n         * @param {nice_ts.G2C_LoginGate} message G2C_LoginGate\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        G2C_LoginGate.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            var object = {};\r\n            if (options.defaults) {\r\n                if ($util.Long) {\r\n                    var long = new $util.Long(0, 0, false);\r\n                    object.PlayerId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\r\n                } else\r\n                    object.PlayerId = options.longs === String ? \"0\" : 0;\r\n                object.Error = 0;\r\n                object.Message = \"\";\r\n            }\r\n            if (message.PlayerId != null && message.hasOwnProperty(\"PlayerId\"))\r\n                if (typeof message.PlayerId === \"number\")\r\n                    object.PlayerId = options.longs === String ? String(message.PlayerId) : message.PlayerId;\r\n                else\r\n                    object.PlayerId = options.longs === String ? $util.Long.prototype.toString.call(message.PlayerId) : options.longs === Number ? new $util.LongBits(message.PlayerId.low >>> 0, message.PlayerId.high >>> 0).toNumber() : message.PlayerId;\r\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\r\n                object.Error = message.Error;\r\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\r\n                object.Message = message.Message;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this G2C_LoginGate to JSON.\r\n         * @function toJSON\r\n         * @memberof nice_ts.G2C_LoginGate\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        G2C_LoginGate.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return G2C_LoginGate;\r\n    })();\r\n\r\n    nice_ts.C2GS_Test = (function() {\r\n\r\n        /**\r\n         * Properties of a C2GS_Test.\r\n         * @memberof nice_ts\r\n         * @interface IC2GS_Test\r\n         * @property {number|null} [testID] C2GS_Test testID\r\n         * @property {string|null} [testName] C2GS_Test testName\r\n         */\r\n\r\n        /**\r\n         * Constructs a new C2GS_Test.\r\n         * @memberof nice_ts\r\n         * @classdesc Represents a C2GS_Test.\r\n         * @implements IC2GS_Test\r\n         * @constructor\r\n         * @param {nice_ts.IC2GS_Test=} [properties] Properties to set\r\n         */\r\n        function C2GS_Test(properties) {\r\n            if (properties)\r\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * C2GS_Test testID.\r\n         * @member {number} testID\r\n         * @memberof nice_ts.C2GS_Test\r\n         * @instance\r\n         */\r\n        C2GS_Test.prototype.testID = 0;\r\n\r\n        /**\r\n         * C2GS_Test testName.\r\n         * @member {string} testName\r\n         * @memberof nice_ts.C2GS_Test\r\n         * @instance\r\n         */\r\n        C2GS_Test.prototype.testName = \"\";\r\n\r\n        /**\r\n         * Creates a new C2GS_Test instance using the specified properties.\r\n         * @function create\r\n         * @memberof nice_ts.C2GS_Test\r\n         * @static\r\n         * @param {nice_ts.IC2GS_Test=} [properties] Properties to set\r\n         * @returns {nice_ts.C2GS_Test} C2GS_Test instance\r\n         */\r\n        C2GS_Test.create = function create(properties) {\r\n            return new C2GS_Test(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GS_Test message. Does not implicitly {@link nice_ts.C2GS_Test.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof nice_ts.C2GS_Test\r\n         * @static\r\n         * @param {nice_ts.IC2GS_Test} message C2GS_Test message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GS_Test.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            if (message.testID != null && Object.hasOwnProperty.call(message, \"testID\"))\r\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.testID);\r\n            if (message.testName != null && Object.hasOwnProperty.call(message, \"testName\"))\r\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.testName);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified C2GS_Test message, length delimited. Does not implicitly {@link nice_ts.C2GS_Test.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof nice_ts.C2GS_Test\r\n         * @static\r\n         * @param {nice_ts.IC2GS_Test} message C2GS_Test message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        C2GS_Test.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GS_Test message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof nice_ts.C2GS_Test\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {nice_ts.C2GS_Test} C2GS_Test\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GS_Test.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.nice_ts.C2GS_Test();\r\n            while (reader.pos < end) {\r\n                var tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 1:\r\n                    message.testID = reader.int32();\r\n                    break;\r\n                case 2:\r\n                    message.testName = reader.string();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a C2GS_Test message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof nice_ts.C2GS_Test\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {nice_ts.C2GS_Test} C2GS_Test\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        C2GS_Test.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a C2GS_Test message.\r\n         * @function verify\r\n         * @memberof nice_ts.C2GS_Test\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        C2GS_Test.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (message.testID != null && message.hasOwnProperty(\"testID\"))\r\n                if (!$util.isInteger(message.testID))\r\n                    return \"testID: integer expected\";\r\n            if (message.testName != null && message.hasOwnProperty(\"testName\"))\r\n                if (!$util.isString(message.testName))\r\n                    return \"testName: string expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a C2GS_Test message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof nice_ts.C2GS_Test\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {nice_ts.C2GS_Test} C2GS_Test\r\n         */\r\n        C2GS_Test.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.nice_ts.C2GS_Test)\r\n                return object;\r\n            var message = new $root.nice_ts.C2GS_Test();\r\n            if (object.testID != null)\r\n                message.testID = object.testID | 0;\r\n            if (object.testName != null)\r\n                message.testName = String(object.testName);\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a C2GS_Test message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof nice_ts.C2GS_Test\r\n         * @static\r\n         * @param {nice_ts.C2GS_Test} message C2GS_Test\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        C2GS_Test.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            var object = {};\r\n            if (options.defaults) {\r\n                object.testID = 0;\r\n                object.testName = \"\";\r\n            }\r\n            if (message.testID != null && message.hasOwnProperty(\"testID\"))\r\n                object.testID = message.testID;\r\n            if (message.testName != null && message.hasOwnProperty(\"testName\"))\r\n                object.testName = message.testName;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this C2GS_Test to JSON.\r\n         * @function toJSON\r\n         * @memberof nice_ts.C2GS_Test\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        C2GS_Test.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return C2GS_Test;\r\n    })();\r\n\r\n    nice_ts.GS2C_Test = (function() {\r\n\r\n        /**\r\n         * Properties of a GS2C_Test.\r\n         * @memberof nice_ts\r\n         * @interface IGS2C_Test\r\n         * @property {number|null} [Error] GS2C_Test Error\r\n         * @property {string|null} [Message] GS2C_Test Message\r\n         * @property {string|null} [testResponse] GS2C_Test testResponse\r\n         */\r\n\r\n        /**\r\n         * Constructs a new GS2C_Test.\r\n         * @memberof nice_ts\r\n         * @classdesc Represents a GS2C_Test.\r\n         * @implements IGS2C_Test\r\n         * @constructor\r\n         * @param {nice_ts.IGS2C_Test=} [properties] Properties to set\r\n         */\r\n        function GS2C_Test(properties) {\r\n            if (properties)\r\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\r\n                    if (properties[keys[i]] != null)\r\n                        this[keys[i]] = properties[keys[i]];\r\n        }\r\n\r\n        /**\r\n         * GS2C_Test Error.\r\n         * @member {number} Error\r\n         * @memberof nice_ts.GS2C_Test\r\n         * @instance\r\n         */\r\n        GS2C_Test.prototype.Error = 0;\r\n\r\n        /**\r\n         * GS2C_Test Message.\r\n         * @member {string} Message\r\n         * @memberof nice_ts.GS2C_Test\r\n         * @instance\r\n         */\r\n        GS2C_Test.prototype.Message = \"\";\r\n\r\n        /**\r\n         * GS2C_Test testResponse.\r\n         * @member {string} testResponse\r\n         * @memberof nice_ts.GS2C_Test\r\n         * @instance\r\n         */\r\n        GS2C_Test.prototype.testResponse = \"\";\r\n\r\n        /**\r\n         * Creates a new GS2C_Test instance using the specified properties.\r\n         * @function create\r\n         * @memberof nice_ts.GS2C_Test\r\n         * @static\r\n         * @param {nice_ts.IGS2C_Test=} [properties] Properties to set\r\n         * @returns {nice_ts.GS2C_Test} GS2C_Test instance\r\n         */\r\n        GS2C_Test.create = function create(properties) {\r\n            return new GS2C_Test(properties);\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified GS2C_Test message. Does not implicitly {@link nice_ts.GS2C_Test.verify|verify} messages.\r\n         * @function encode\r\n         * @memberof nice_ts.GS2C_Test\r\n         * @static\r\n         * @param {nice_ts.IGS2C_Test} message GS2C_Test message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        GS2C_Test.encode = function encode(message, writer) {\r\n            if (!writer)\r\n                writer = $Writer.create();\r\n            if (message.testResponse != null && Object.hasOwnProperty.call(message, \"testResponse\"))\r\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.testResponse);\r\n            if (message.Error != null && Object.hasOwnProperty.call(message, \"Error\"))\r\n                writer.uint32(/* id 91, wireType 0 =*/728).int32(message.Error);\r\n            if (message.Message != null && Object.hasOwnProperty.call(message, \"Message\"))\r\n                writer.uint32(/* id 92, wireType 2 =*/738).string(message.Message);\r\n            return writer;\r\n        };\r\n\r\n        /**\r\n         * Encodes the specified GS2C_Test message, length delimited. Does not implicitly {@link nice_ts.GS2C_Test.verify|verify} messages.\r\n         * @function encodeDelimited\r\n         * @memberof nice_ts.GS2C_Test\r\n         * @static\r\n         * @param {nice_ts.IGS2C_Test} message GS2C_Test message or plain object to encode\r\n         * @param {$protobuf.Writer} [writer] Writer to encode to\r\n         * @returns {$protobuf.Writer} Writer\r\n         */\r\n        GS2C_Test.encodeDelimited = function encodeDelimited(message, writer) {\r\n            return this.encode(message, writer).ldelim();\r\n        };\r\n\r\n        /**\r\n         * Decodes a GS2C_Test message from the specified reader or buffer.\r\n         * @function decode\r\n         * @memberof nice_ts.GS2C_Test\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @param {number} [length] Message length if known beforehand\r\n         * @returns {nice_ts.GS2C_Test} GS2C_Test\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        GS2C_Test.decode = function decode(reader, length) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = $Reader.create(reader);\r\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.nice_ts.GS2C_Test();\r\n            while (reader.pos < end) {\r\n                var tag = reader.uint32();\r\n                switch (tag >>> 3) {\r\n                case 91:\r\n                    message.Error = reader.int32();\r\n                    break;\r\n                case 92:\r\n                    message.Message = reader.string();\r\n                    break;\r\n                case 1:\r\n                    message.testResponse = reader.string();\r\n                    break;\r\n                default:\r\n                    reader.skipType(tag & 7);\r\n                    break;\r\n                }\r\n            }\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Decodes a GS2C_Test message from the specified reader or buffer, length delimited.\r\n         * @function decodeDelimited\r\n         * @memberof nice_ts.GS2C_Test\r\n         * @static\r\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\r\n         * @returns {nice_ts.GS2C_Test} GS2C_Test\r\n         * @throws {Error} If the payload is not a reader or valid buffer\r\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\r\n         */\r\n        GS2C_Test.decodeDelimited = function decodeDelimited(reader) {\r\n            if (!(reader instanceof $Reader))\r\n                reader = new $Reader(reader);\r\n            return this.decode(reader, reader.uint32());\r\n        };\r\n\r\n        /**\r\n         * Verifies a GS2C_Test message.\r\n         * @function verify\r\n         * @memberof nice_ts.GS2C_Test\r\n         * @static\r\n         * @param {Object.<string,*>} message Plain object to verify\r\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\r\n         */\r\n        GS2C_Test.verify = function verify(message) {\r\n            if (typeof message !== \"object\" || message === null)\r\n                return \"object expected\";\r\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\r\n                if (!$util.isInteger(message.Error))\r\n                    return \"Error: integer expected\";\r\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\r\n                if (!$util.isString(message.Message))\r\n                    return \"Message: string expected\";\r\n            if (message.testResponse != null && message.hasOwnProperty(\"testResponse\"))\r\n                if (!$util.isString(message.testResponse))\r\n                    return \"testResponse: string expected\";\r\n            return null;\r\n        };\r\n\r\n        /**\r\n         * Creates a GS2C_Test message from a plain object. Also converts values to their respective internal types.\r\n         * @function fromObject\r\n         * @memberof nice_ts.GS2C_Test\r\n         * @static\r\n         * @param {Object.<string,*>} object Plain object\r\n         * @returns {nice_ts.GS2C_Test} GS2C_Test\r\n         */\r\n        GS2C_Test.fromObject = function fromObject(object) {\r\n            if (object instanceof $root.nice_ts.GS2C_Test)\r\n                return object;\r\n            var message = new $root.nice_ts.GS2C_Test();\r\n            if (object.Error != null)\r\n                message.Error = object.Error | 0;\r\n            if (object.Message != null)\r\n                message.Message = String(object.Message);\r\n            if (object.testResponse != null)\r\n                message.testResponse = String(object.testResponse);\r\n            return message;\r\n        };\r\n\r\n        /**\r\n         * Creates a plain object from a GS2C_Test message. Also converts values to other types if specified.\r\n         * @function toObject\r\n         * @memberof nice_ts.GS2C_Test\r\n         * @static\r\n         * @param {nice_ts.GS2C_Test} message GS2C_Test\r\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\r\n         * @returns {Object.<string,*>} Plain object\r\n         */\r\n        GS2C_Test.toObject = function toObject(message, options) {\r\n            if (!options)\r\n                options = {};\r\n            var object = {};\r\n            if (options.defaults) {\r\n                object.testResponse = \"\";\r\n                object.Error = 0;\r\n                object.Message = \"\";\r\n            }\r\n            if (message.testResponse != null && message.hasOwnProperty(\"testResponse\"))\r\n                object.testResponse = message.testResponse;\r\n            if (message.Error != null && message.hasOwnProperty(\"Error\"))\r\n                object.Error = message.Error;\r\n            if (message.Message != null && message.hasOwnProperty(\"Message\"))\r\n                object.Message = message.Message;\r\n            return object;\r\n        };\r\n\r\n        /**\r\n         * Converts this GS2C_Test to JSON.\r\n         * @function toJSON\r\n         * @memberof nice_ts.GS2C_Test\r\n         * @instance\r\n         * @returns {Object.<string,*>} JSON object\r\n         */\r\n        GS2C_Test.prototype.toJSON = function toJSON() {\r\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\r\n        };\r\n\r\n        return GS2C_Test;\r\n    })();\r\n\r\n    return nice_ts;\r\n})();\r\n\r\nmodule.exports = $root;\r\n","module.exports = require(\"csharp\");","module.exports = require(\"puerts\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { GameLaunch, JsManager, UnityEngine } from \"csharp\";\r\nimport { CommonUI } from \"./data/ui/common\";\r\nimport { Logger } from \"./framework/logger/Logger\";\r\nimport { SceneDef } from \"./framework/scene/SceneDef\";\r\nimport { S } from \"./global/GameConfig\";\r\nimport { UnitTest } from \"./unittest/UnitTest\";\r\n\r\nclass GameMain{\r\n\r\n    constructor() {\r\n        JsManager.Instance.JsOnApplicationQuit = () => this.onApplicationQuit();\r\n        JsManager.Instance.JsOnDispose = () => this.onDispose();\r\n        JsManager.Instance.JsUpdate = (delta:number) => this.update(delta);\r\n    }\r\n    \r\n    public async start(){\r\n        UnityEngine.Debug.Log('Hellp Word!2222224')\r\n        //加载通用FairyGUI资源\r\n        console.log(CommonUI.PackageName)\r\n        await S.ResManager.loadFairyGUIPackage(CommonUI.PackageName);\r\n        JSON.parse('aa');\r\n        //do Unit Test\r\n        // UnitTest.doTest();\r\n\r\n        //进入登录模块\r\n        await S.SceneManager.loadScene(SceneDef.GameStart);\r\n\r\n        //JS启动完成，通知C#层\r\n        GameLaunch.Instance.JsLuanchFinish();\r\n    };\r\n\r\n    public onApplicationQuit():void {\r\n        S.GameObjectPool.cleanup(true);\r\n        Logger.log(\"Game onApplicationQuit in JS....\");\r\n    }\r\n\r\n    private update(delta:number) {\r\n        // console.log(delta)\r\n        S.UIManager.update(delta)\r\n    }\r\n    \r\n    public onDispose():void {\r\n        Logger.log(\"Game onDispose in JS....\");\r\n    }\r\n}\r\n\r\n\r\n\r\nnew GameMain().start();\r\n\r\n"],"names":[],"sourceRoot":""}